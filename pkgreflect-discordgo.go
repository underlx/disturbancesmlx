// Code generated by github.com/ungerik/pkgreflect and edited by gbl08ma

package main

import (
	"reflect"

	"github.com/bwmarrin/discordgo"
)

// extpkgDiscordGoTypes contains the types of the discordgo package
var extpkgDiscordGoTypes = map[string]reflect.Type{
	"APIErrorMessage":                           reflect.TypeOf((*discordgo.APIErrorMessage)(nil)).Elem(),
	"ActionsRow":                                reflect.TypeOf((*discordgo.ActionsRow)(nil)).Elem(),
	"Activity":                                  reflect.TypeOf((*discordgo.Activity)(nil)).Elem(),
	"ActivityType":                              reflect.TypeOf((*discordgo.ActivityType)(nil)).Elem(),
	"AddedThreadMember":                         reflect.TypeOf((*discordgo.AddedThreadMember)(nil)).Elem(),
	"AllowedMentionType":                        reflect.TypeOf((*discordgo.AllowedMentionType)(nil)).Elem(),
	"Application":                               reflect.TypeOf((*discordgo.Application)(nil)).Elem(),
	"ApplicationCommand":                        reflect.TypeOf((*discordgo.ApplicationCommand)(nil)).Elem(),
	"ApplicationCommandInteractionData":         reflect.TypeOf((*discordgo.ApplicationCommandInteractionData)(nil)).Elem(),
	"ApplicationCommandInteractionDataOption":   reflect.TypeOf((*discordgo.ApplicationCommandInteractionDataOption)(nil)).Elem(),
	"ApplicationCommandInteractionDataResolved": reflect.TypeOf((*discordgo.ApplicationCommandInteractionDataResolved)(nil)).Elem(),
	"ApplicationCommandOption":                  reflect.TypeOf((*discordgo.ApplicationCommandOption)(nil)).Elem(),
	"ApplicationCommandOptionChoice":            reflect.TypeOf((*discordgo.ApplicationCommandOptionChoice)(nil)).Elem(),
	"ApplicationCommandOptionType":              reflect.TypeOf((*discordgo.ApplicationCommandOptionType)(nil)).Elem(),
	"ApplicationCommandPermissionType":          reflect.TypeOf((*discordgo.ApplicationCommandPermissionType)(nil)).Elem(),
	"ApplicationCommandPermissions":             reflect.TypeOf((*discordgo.ApplicationCommandPermissions)(nil)).Elem(),
	"ApplicationCommandPermissionsList":         reflect.TypeOf((*discordgo.ApplicationCommandPermissionsList)(nil)).Elem(),
	"ApplicationCommandPermissionsUpdate":       reflect.TypeOf((*discordgo.ApplicationCommandPermissionsUpdate)(nil)).Elem(),
	"ApplicationCommandType":                    reflect.TypeOf((*discordgo.ApplicationCommandType)(nil)).Elem(),
	"Asset":                                     reflect.TypeOf((*discordgo.Asset)(nil)).Elem(),
	"Assets":                                    reflect.TypeOf((*discordgo.Assets)(nil)).Elem(),
	"AuditLogAction":                            reflect.TypeOf((*discordgo.AuditLogAction)(nil)).Elem(),
	"AuditLogChange":                            reflect.TypeOf((*discordgo.AuditLogChange)(nil)).Elem(),
	"AuditLogChangeKey":                         reflect.TypeOf((*discordgo.AuditLogChangeKey)(nil)).Elem(),
	"AuditLogEntry":                             reflect.TypeOf((*discordgo.AuditLogEntry)(nil)).Elem(),
	"AuditLogOptions":                           reflect.TypeOf((*discordgo.AuditLogOptions)(nil)).Elem(),
	"AuditLogOptionsType":                       reflect.TypeOf((*discordgo.AuditLogOptionsType)(nil)).Elem(),
	"AutoModerationAction":                      reflect.TypeOf((*discordgo.AutoModerationAction)(nil)).Elem(),
	"AutoModerationActionExecution":             reflect.TypeOf((*discordgo.AutoModerationActionExecution)(nil)).Elem(),
	"AutoModerationActionMetadata":              reflect.TypeOf((*discordgo.AutoModerationActionMetadata)(nil)).Elem(),
	"AutoModerationActionType":                  reflect.TypeOf((*discordgo.AutoModerationActionType)(nil)).Elem(),
	"AutoModerationKeywordPreset":               reflect.TypeOf((*discordgo.AutoModerationKeywordPreset)(nil)).Elem(),
	"AutoModerationRule":                        reflect.TypeOf((*discordgo.AutoModerationRule)(nil)).Elem(),
	"AutoModerationRuleCreate":                  reflect.TypeOf((*discordgo.AutoModerationRuleCreate)(nil)).Elem(),
	"AutoModerationRuleDelete":                  reflect.TypeOf((*discordgo.AutoModerationRuleDelete)(nil)).Elem(),
	"AutoModerationRuleEventType":               reflect.TypeOf((*discordgo.AutoModerationRuleEventType)(nil)).Elem(),
	"AutoModerationRuleTriggerType":             reflect.TypeOf((*discordgo.AutoModerationRuleTriggerType)(nil)).Elem(),
	"AutoModerationRuleUpdate":                  reflect.TypeOf((*discordgo.AutoModerationRuleUpdate)(nil)).Elem(),
	"AutoModerationTriggerMetadata":             reflect.TypeOf((*discordgo.AutoModerationTriggerMetadata)(nil)).Elem(),
	"Bucket":                                    reflect.TypeOf((*discordgo.Bucket)(nil)).Elem(),
	"Button":                                    reflect.TypeOf((*discordgo.Button)(nil)).Elem(),
	"ButtonStyle":                               reflect.TypeOf((*discordgo.ButtonStyle)(nil)).Elem(),
	"Channel":                                   reflect.TypeOf((*discordgo.Channel)(nil)).Elem(),
	"ChannelCreate":                             reflect.TypeOf((*discordgo.ChannelCreate)(nil)).Elem(),
	"ChannelDelete":                             reflect.TypeOf((*discordgo.ChannelDelete)(nil)).Elem(),
	"ChannelEdit":                               reflect.TypeOf((*discordgo.ChannelEdit)(nil)).Elem(),
	"ChannelFollow":                             reflect.TypeOf((*discordgo.ChannelFollow)(nil)).Elem(),
	"ChannelPinsUpdate":                         reflect.TypeOf((*discordgo.ChannelPinsUpdate)(nil)).Elem(),
	"ChannelType":                               reflect.TypeOf((*discordgo.ChannelType)(nil)).Elem(),
	"ChannelUpdate":                             reflect.TypeOf((*discordgo.ChannelUpdate)(nil)).Elem(),
	"ComponentEmoji":                            reflect.TypeOf((*discordgo.ComponentEmoji)(nil)).Elem(),
	"ComponentType":                             reflect.TypeOf((*discordgo.ComponentType)(nil)).Elem(),
	"Connect":                                   reflect.TypeOf((*discordgo.Connect)(nil)).Elem(),
	"Disconnect":                                reflect.TypeOf((*discordgo.Disconnect)(nil)).Elem(),
	"EmbedType":                                 reflect.TypeOf((*discordgo.EmbedType)(nil)).Elem(),
	"Emoji":                                     reflect.TypeOf((*discordgo.Emoji)(nil)).Elem(),
	"EmojiParams":                               reflect.TypeOf((*discordgo.EmojiParams)(nil)).Elem(),
	"Event":                                     reflect.TypeOf((*discordgo.Event)(nil)).Elem(),
	"EventHandler":                              reflect.TypeOf((*discordgo.EventHandler)(nil)).Elem(),
	"EventInterfaceProvider":                    reflect.TypeOf((*discordgo.EventInterfaceProvider)(nil)).Elem(),
	"ExpireBehavior":                            reflect.TypeOf((*discordgo.ExpireBehavior)(nil)).Elem(),
	"ExplicitContentFilterLevel":                reflect.TypeOf((*discordgo.ExplicitContentFilterLevel)(nil)).Elem(),
	"File":                                      reflect.TypeOf((*discordgo.File)(nil)).Elem(),
	"GatewayBotResponse":                        reflect.TypeOf((*discordgo.GatewayBotResponse)(nil)).Elem(),
	"GatewayStatusUpdate":                       reflect.TypeOf((*discordgo.GatewayStatusUpdate)(nil)).Elem(),
	"Guild":                                     reflect.TypeOf((*discordgo.Guild)(nil)).Elem(),
	"GuildApplicationCommandPermissions":        reflect.TypeOf((*discordgo.GuildApplicationCommandPermissions)(nil)).Elem(),
	"GuildAuditLog":                             reflect.TypeOf((*discordgo.GuildAuditLog)(nil)).Elem(),
	"GuildBan":                                  reflect.TypeOf((*discordgo.GuildBan)(nil)).Elem(),
	"GuildBanAdd":                               reflect.TypeOf((*discordgo.GuildBanAdd)(nil)).Elem(),
	"GuildBanRemove":                            reflect.TypeOf((*discordgo.GuildBanRemove)(nil)).Elem(),
	"GuildChannelCreateData":                    reflect.TypeOf((*discordgo.GuildChannelCreateData)(nil)).Elem(),
	"GuildCreate":                               reflect.TypeOf((*discordgo.GuildCreate)(nil)).Elem(),
	"GuildDelete":                               reflect.TypeOf((*discordgo.GuildDelete)(nil)).Elem(),
	"GuildEmbed":                                reflect.TypeOf((*discordgo.GuildEmbed)(nil)).Elem(),
	"GuildEmojisUpdate":                         reflect.TypeOf((*discordgo.GuildEmojisUpdate)(nil)).Elem(),
	"GuildFeature":                              reflect.TypeOf((*discordgo.GuildFeature)(nil)).Elem(),
	"GuildIntegrationsUpdate":                   reflect.TypeOf((*discordgo.GuildIntegrationsUpdate)(nil)).Elem(),
	"GuildMemberAdd":                            reflect.TypeOf((*discordgo.GuildMemberAdd)(nil)).Elem(),
	"GuildMemberAddParams":                      reflect.TypeOf((*discordgo.GuildMemberAddParams)(nil)).Elem(),
	"GuildMemberParams":                         reflect.TypeOf((*discordgo.GuildMemberParams)(nil)).Elem(),
	"GuildMemberRemove":                         reflect.TypeOf((*discordgo.GuildMemberRemove)(nil)).Elem(),
	"GuildMemberUpdate":                         reflect.TypeOf((*discordgo.GuildMemberUpdate)(nil)).Elem(),
	"GuildMembersChunk":                         reflect.TypeOf((*discordgo.GuildMembersChunk)(nil)).Elem(),
	"GuildNSFWLevel":                            reflect.TypeOf((*discordgo.GuildNSFWLevel)(nil)).Elem(),
	"GuildParams":                               reflect.TypeOf((*discordgo.GuildParams)(nil)).Elem(),
	"GuildPreview":                              reflect.TypeOf((*discordgo.GuildPreview)(nil)).Elem(),
	"GuildRole":                                 reflect.TypeOf((*discordgo.GuildRole)(nil)).Elem(),
	"GuildRoleCreate":                           reflect.TypeOf((*discordgo.GuildRoleCreate)(nil)).Elem(),
	"GuildRoleDelete":                           reflect.TypeOf((*discordgo.GuildRoleDelete)(nil)).Elem(),
	"GuildRoleUpdate":                           reflect.TypeOf((*discordgo.GuildRoleUpdate)(nil)).Elem(),
	"GuildScheduledEvent":                       reflect.TypeOf((*discordgo.GuildScheduledEvent)(nil)).Elem(),
	"GuildScheduledEventCreate":                 reflect.TypeOf((*discordgo.GuildScheduledEventCreate)(nil)).Elem(),
	"GuildScheduledEventDelete":                 reflect.TypeOf((*discordgo.GuildScheduledEventDelete)(nil)).Elem(),
	"GuildScheduledEventEntityMetadata":         reflect.TypeOf((*discordgo.GuildScheduledEventEntityMetadata)(nil)).Elem(),
	"GuildScheduledEventEntityType":             reflect.TypeOf((*discordgo.GuildScheduledEventEntityType)(nil)).Elem(),
	"GuildScheduledEventParams":                 reflect.TypeOf((*discordgo.GuildScheduledEventParams)(nil)).Elem(),
	"GuildScheduledEventPrivacyLevel":           reflect.TypeOf((*discordgo.GuildScheduledEventPrivacyLevel)(nil)).Elem(),
	"GuildScheduledEventStatus":                 reflect.TypeOf((*discordgo.GuildScheduledEventStatus)(nil)).Elem(),
	"GuildScheduledEventUpdate":                 reflect.TypeOf((*discordgo.GuildScheduledEventUpdate)(nil)).Elem(),
	"GuildScheduledEventUser":                   reflect.TypeOf((*discordgo.GuildScheduledEventUser)(nil)).Elem(),
	"GuildScheduledEventUserAdd":                reflect.TypeOf((*discordgo.GuildScheduledEventUserAdd)(nil)).Elem(),
	"GuildScheduledEventUserRemove":             reflect.TypeOf((*discordgo.GuildScheduledEventUserRemove)(nil)).Elem(),
	"GuildTemplate":                             reflect.TypeOf((*discordgo.GuildTemplate)(nil)).Elem(),
	"GuildTemplateParams":                       reflect.TypeOf((*discordgo.GuildTemplateParams)(nil)).Elem(),
	"GuildUpdate":                               reflect.TypeOf((*discordgo.GuildUpdate)(nil)).Elem(),
	"Identify":                                  reflect.TypeOf((*discordgo.Identify)(nil)).Elem(),
	"IdentifyProperties":                        reflect.TypeOf((*discordgo.IdentifyProperties)(nil)).Elem(),
	"Integration":                               reflect.TypeOf((*discordgo.Integration)(nil)).Elem(),
	"IntegrationAccount":                        reflect.TypeOf((*discordgo.IntegrationAccount)(nil)).Elem(),
	"Intent":                                    reflect.TypeOf((*discordgo.Intent)(nil)).Elem(),
	"Interaction":                               reflect.TypeOf((*discordgo.Interaction)(nil)).Elem(),
	"InteractionCreate":                         reflect.TypeOf((*discordgo.InteractionCreate)(nil)).Elem(),
	"InteractionData":                           reflect.TypeOf((*discordgo.InteractionData)(nil)).Elem(),
	"InteractionResponse":                       reflect.TypeOf((*discordgo.InteractionResponse)(nil)).Elem(),
	"InteractionResponseData":                   reflect.TypeOf((*discordgo.InteractionResponseData)(nil)).Elem(),
	"InteractionResponseType":                   reflect.TypeOf((*discordgo.InteractionResponseType)(nil)).Elem(),
	"InteractionType":                           reflect.TypeOf((*discordgo.InteractionType)(nil)).Elem(),
	"Invite":                                    reflect.TypeOf((*discordgo.Invite)(nil)).Elem(),
	"InviteCreate":                              reflect.TypeOf((*discordgo.InviteCreate)(nil)).Elem(),
	"InviteDelete":                              reflect.TypeOf((*discordgo.InviteDelete)(nil)).Elem(),
	"InviteTargetType":                          reflect.TypeOf((*discordgo.InviteTargetType)(nil)).Elem(),
	"Locale":                                    reflect.TypeOf((*discordgo.Locale)(nil)).Elem(),
	"Member":                                    reflect.TypeOf((*discordgo.Member)(nil)).Elem(),
	"MembershipState":                           reflect.TypeOf((*discordgo.MembershipState)(nil)).Elem(),
	"Message":                                   reflect.TypeOf((*discordgo.Message)(nil)).Elem(),
	"MessageActivity":                           reflect.TypeOf((*discordgo.MessageActivity)(nil)).Elem(),
	"MessageActivityType":                       reflect.TypeOf((*discordgo.MessageActivityType)(nil)).Elem(),
	"MessageAllowedMentions":                    reflect.TypeOf((*discordgo.MessageAllowedMentions)(nil)).Elem(),
	"MessageApplication":                        reflect.TypeOf((*discordgo.MessageApplication)(nil)).Elem(),
	"MessageAttachment":                         reflect.TypeOf((*discordgo.MessageAttachment)(nil)).Elem(),
	"MessageComponent":                          reflect.TypeOf((*discordgo.MessageComponent)(nil)).Elem(),
	"MessageComponentInteractionData":           reflect.TypeOf((*discordgo.MessageComponentInteractionData)(nil)).Elem(),
	"MessageCreate":                             reflect.TypeOf((*discordgo.MessageCreate)(nil)).Elem(),
	"MessageDelete":                             reflect.TypeOf((*discordgo.MessageDelete)(nil)).Elem(),
	"MessageDeleteBulk":                         reflect.TypeOf((*discordgo.MessageDeleteBulk)(nil)).Elem(),
	"MessageEdit":                               reflect.TypeOf((*discordgo.MessageEdit)(nil)).Elem(),
	"MessageEmbed":                              reflect.TypeOf((*discordgo.MessageEmbed)(nil)).Elem(),
	"MessageEmbedAuthor":                        reflect.TypeOf((*discordgo.MessageEmbedAuthor)(nil)).Elem(),
	"MessageEmbedField":                         reflect.TypeOf((*discordgo.MessageEmbedField)(nil)).Elem(),
	"MessageEmbedFooter":                        reflect.TypeOf((*discordgo.MessageEmbedFooter)(nil)).Elem(),
	"MessageEmbedImage":                         reflect.TypeOf((*discordgo.MessageEmbedImage)(nil)).Elem(),
	"MessageEmbedProvider":                      reflect.TypeOf((*discordgo.MessageEmbedProvider)(nil)).Elem(),
	"MessageEmbedThumbnail":                     reflect.TypeOf((*discordgo.MessageEmbedThumbnail)(nil)).Elem(),
	"MessageEmbedVideo":                         reflect.TypeOf((*discordgo.MessageEmbedVideo)(nil)).Elem(),
	"MessageFlags":                              reflect.TypeOf((*discordgo.MessageFlags)(nil)).Elem(),
	"MessageInteraction":                        reflect.TypeOf((*discordgo.MessageInteraction)(nil)).Elem(),
	"MessageNotifications":                      reflect.TypeOf((*discordgo.MessageNotifications)(nil)).Elem(),
	"MessageReaction":                           reflect.TypeOf((*discordgo.MessageReaction)(nil)).Elem(),
	"MessageReactionAdd":                        reflect.TypeOf((*discordgo.MessageReactionAdd)(nil)).Elem(),
	"MessageReactionRemove":                     reflect.TypeOf((*discordgo.MessageReactionRemove)(nil)).Elem(),
	"MessageReactionRemoveAll":                  reflect.TypeOf((*discordgo.MessageReactionRemoveAll)(nil)).Elem(),
	"MessageReactions":                          reflect.TypeOf((*discordgo.MessageReactions)(nil)).Elem(),
	"MessageReference":                          reflect.TypeOf((*discordgo.MessageReference)(nil)).Elem(),
	"MessageSend":                               reflect.TypeOf((*discordgo.MessageSend)(nil)).Elem(),
	"MessageType":                               reflect.TypeOf((*discordgo.MessageType)(nil)).Elem(),
	"MessageUpdate":                             reflect.TypeOf((*discordgo.MessageUpdate)(nil)).Elem(),
	"MfaLevel":                                  reflect.TypeOf((*discordgo.MfaLevel)(nil)).Elem(),
	"ModalSubmitInteractionData":                reflect.TypeOf((*discordgo.ModalSubmitInteractionData)(nil)).Elem(),
	"Packet":                                    reflect.TypeOf((*discordgo.Packet)(nil)).Elem(),
	"Party":                                     reflect.TypeOf((*discordgo.Party)(nil)).Elem(),
	"PermissionOverwrite":                       reflect.TypeOf((*discordgo.PermissionOverwrite)(nil)).Elem(),
	"PermissionOverwriteType":                   reflect.TypeOf((*discordgo.PermissionOverwriteType)(nil)).Elem(),
	"PremiumTier":                               reflect.TypeOf((*discordgo.PremiumTier)(nil)).Elem(),
	"Presence":                                  reflect.TypeOf((*discordgo.Presence)(nil)).Elem(),
	"PresenceUpdate":                            reflect.TypeOf((*discordgo.PresenceUpdate)(nil)).Elem(),
	"PresencesReplace":                          reflect.TypeOf((*discordgo.PresencesReplace)(nil)).Elem(),
	"RESTError":                                 reflect.TypeOf((*discordgo.RESTError)(nil)).Elem(),
	"RateLimit":                                 reflect.TypeOf((*discordgo.RateLimit)(nil)).Elem(),
	"RateLimitError":                            reflect.TypeOf((*discordgo.RateLimitError)(nil)).Elem(),
	"RateLimiter":                               reflect.TypeOf((*discordgo.RateLimiter)(nil)).Elem(),
	"ReadState":                                 reflect.TypeOf((*discordgo.ReadState)(nil)).Elem(),
	"Ready":                                     reflect.TypeOf((*discordgo.Ready)(nil)).Elem(),
	"Resumed":                                   reflect.TypeOf((*discordgo.Resumed)(nil)).Elem(),
	"Role":                                      reflect.TypeOf((*discordgo.Role)(nil)).Elem(),
	"RoleParams":                                reflect.TypeOf((*discordgo.RoleParams)(nil)).Elem(),
	"Roles":                                     reflect.TypeOf((*discordgo.Roles)(nil)).Elem(),
	"Secrets":                                   reflect.TypeOf((*discordgo.Secrets)(nil)).Elem(),
	"SelectMenu":                                reflect.TypeOf((*discordgo.SelectMenu)(nil)).Elem(),
	"SelectMenuOption":                          reflect.TypeOf((*discordgo.SelectMenuOption)(nil)).Elem(),
	"Session":                                   reflect.TypeOf((*discordgo.Session)(nil)).Elem(),
	"SessionInformation":                        reflect.TypeOf((*discordgo.SessionInformation)(nil)).Elem(),
	"StageInstance":                             reflect.TypeOf((*discordgo.StageInstance)(nil)).Elem(),
	"StageInstanceEventCreate":                  reflect.TypeOf((*discordgo.StageInstanceEventCreate)(nil)).Elem(),
	"StageInstanceEventDelete":                  reflect.TypeOf((*discordgo.StageInstanceEventDelete)(nil)).Elem(),
	"StageInstanceEventUpdate":                  reflect.TypeOf((*discordgo.StageInstanceEventUpdate)(nil)).Elem(),
	"StageInstanceParams":                       reflect.TypeOf((*discordgo.StageInstanceParams)(nil)).Elem(),
	"StageInstancePrivacyLevel":                 reflect.TypeOf((*discordgo.StageInstancePrivacyLevel)(nil)).Elem(),
	"State":                                     reflect.TypeOf((*discordgo.State)(nil)).Elem(),
	"Status":                                    reflect.TypeOf((*discordgo.Status)(nil)).Elem(),
	"Sticker":                                   reflect.TypeOf((*discordgo.Sticker)(nil)).Elem(),
	"StickerFormat":                             reflect.TypeOf((*discordgo.StickerFormat)(nil)).Elem(),
	"StickerPack":                               reflect.TypeOf((*discordgo.StickerPack)(nil)).Elem(),
	"StickerType":                               reflect.TypeOf((*discordgo.StickerType)(nil)).Elem(),
	"SystemChannelFlag":                         reflect.TypeOf((*discordgo.SystemChannelFlag)(nil)).Elem(),
	"Team":                                      reflect.TypeOf((*discordgo.Team)(nil)).Elem(),
	"TeamMember":                                reflect.TypeOf((*discordgo.TeamMember)(nil)).Elem(),
	"TextInput":                                 reflect.TypeOf((*discordgo.TextInput)(nil)).Elem(),
	"TextInputStyle":                            reflect.TypeOf((*discordgo.TextInputStyle)(nil)).Elem(),
	"ThreadCreate":                              reflect.TypeOf((*discordgo.ThreadCreate)(nil)).Elem(),
	"ThreadDelete":                              reflect.TypeOf((*discordgo.ThreadDelete)(nil)).Elem(),
	"ThreadListSync":                            reflect.TypeOf((*discordgo.ThreadListSync)(nil)).Elem(),
	"ThreadMember":                              reflect.TypeOf((*discordgo.ThreadMember)(nil)).Elem(),
	"ThreadMemberUpdate":                        reflect.TypeOf((*discordgo.ThreadMemberUpdate)(nil)).Elem(),
	"ThreadMembersUpdate":                       reflect.TypeOf((*discordgo.ThreadMembersUpdate)(nil)).Elem(),
	"ThreadMetadata":                            reflect.TypeOf((*discordgo.ThreadMetadata)(nil)).Elem(),
	"ThreadStart":                               reflect.TypeOf((*discordgo.ThreadStart)(nil)).Elem(),
	"ThreadUpdate":                              reflect.TypeOf((*discordgo.ThreadUpdate)(nil)).Elem(),
	"ThreadsList":                               reflect.TypeOf((*discordgo.ThreadsList)(nil)).Elem(),
	"TimeStamps":                                reflect.TypeOf((*discordgo.TimeStamps)(nil)).Elem(),
	"TooManyRequests":                           reflect.TypeOf((*discordgo.TooManyRequests)(nil)).Elem(),
	"TypingStart":                               reflect.TypeOf((*discordgo.TypingStart)(nil)).Elem(),
	"UpdateStatusData":                          reflect.TypeOf((*discordgo.UpdateStatusData)(nil)).Elem(),
	"User":                                      reflect.TypeOf((*discordgo.User)(nil)).Elem(),
	"UserConnection":                            reflect.TypeOf((*discordgo.UserConnection)(nil)).Elem(),
	"UserFlags":                                 reflect.TypeOf((*discordgo.UserFlags)(nil)).Elem(),
	"UserGuild":                                 reflect.TypeOf((*discordgo.UserGuild)(nil)).Elem(),
	"UserUpdate":                                reflect.TypeOf((*discordgo.UserUpdate)(nil)).Elem(),
	"VerificationLevel":                         reflect.TypeOf((*discordgo.VerificationLevel)(nil)).Elem(),
	"VoiceConnection":                           reflect.TypeOf((*discordgo.VoiceConnection)(nil)).Elem(),
	"VoiceRegion":                               reflect.TypeOf((*discordgo.VoiceRegion)(nil)).Elem(),
	"VoiceServerUpdate":                         reflect.TypeOf((*discordgo.VoiceServerUpdate)(nil)).Elem(),
	"VoiceSpeakingUpdate":                       reflect.TypeOf((*discordgo.VoiceSpeakingUpdate)(nil)).Elem(),
	"VoiceSpeakingUpdateHandler":                reflect.TypeOf((*discordgo.VoiceSpeakingUpdateHandler)(nil)).Elem(),
	"VoiceState":                                reflect.TypeOf((*discordgo.VoiceState)(nil)).Elem(),
	"VoiceStateUpdate":                          reflect.TypeOf((*discordgo.VoiceStateUpdate)(nil)).Elem(),
	"Webhook":                                   reflect.TypeOf((*discordgo.Webhook)(nil)).Elem(),
	"WebhookEdit":                               reflect.TypeOf((*discordgo.WebhookEdit)(nil)).Elem(),
	"WebhookParams":                             reflect.TypeOf((*discordgo.WebhookParams)(nil)).Elem(),
	"WebhookType":                               reflect.TypeOf((*discordgo.WebhookType)(nil)).Elem(),
	"WebhooksUpdate":                            reflect.TypeOf((*discordgo.WebhooksUpdate)(nil)).Elem(),
}

// extpkgDiscordGoFunctions contains the functions of the discordgo package
var extpkgDiscordGoFunctions = map[string]reflect.Value{
	"GuildAllChannelsID":       reflect.ValueOf(discordgo.GuildAllChannelsID),
	"MakeIntent":               reflect.ValueOf(discordgo.MakeIntent),
	"MessageComponentFromJSON": reflect.ValueOf(discordgo.MessageComponentFromJSON),
	"MultipartBodyWithJSON":    reflect.ValueOf(discordgo.MultipartBodyWithJSON),
	"New":                      reflect.ValueOf(discordgo.New),
	"NewMessageEdit":           reflect.ValueOf(discordgo.NewMessageEdit),
	"NewRatelimiter":           reflect.ValueOf(discordgo.NewRatelimiter),
	"NewState":                 reflect.ValueOf(discordgo.NewState),
	"SnowflakeTimestamp":       reflect.ValueOf(discordgo.SnowflakeTimestamp),
	"VerifyInteraction":        reflect.ValueOf(discordgo.VerifyInteraction),
}

// extpkgDiscordGoVariables contains the functions of the discordgo package
var extpkgDiscordGoVariables = map[string]reflect.Value{
	"APIVersion":                            reflect.ValueOf(&discordgo.APIVersion),
	"EmojiRegex":                            reflect.ValueOf(&discordgo.EmojiRegex),
	"EndpointAPI":                           reflect.ValueOf(&discordgo.EndpointAPI),
	"EndpointApplication":                   reflect.ValueOf(&discordgo.EndpointApplication),
	"EndpointApplicationCommandPermissions": reflect.ValueOf(&discordgo.EndpointApplicationCommandPermissions),
	"EndpointApplicationCommandsGuildPermissions": reflect.ValueOf(&discordgo.EndpointApplicationCommandsGuildPermissions),
	"EndpointApplicationGlobalCommand":            reflect.ValueOf(&discordgo.EndpointApplicationGlobalCommand),
	"EndpointApplicationGlobalCommands":           reflect.ValueOf(&discordgo.EndpointApplicationGlobalCommands),
	"EndpointApplicationGuildCommand":             reflect.ValueOf(&discordgo.EndpointApplicationGuildCommand),
	"EndpointApplicationGuildCommands":            reflect.ValueOf(&discordgo.EndpointApplicationGuildCommands),
	"EndpointApplications":                        reflect.ValueOf(&discordgo.EndpointApplications),
	"EndpointCDN":                                 reflect.ValueOf(&discordgo.EndpointCDN),
	"EndpointCDNAttachments":                      reflect.ValueOf(&discordgo.EndpointCDNAttachments),
	"EndpointCDNAvatars":                          reflect.ValueOf(&discordgo.EndpointCDNAvatars),
	"EndpointCDNBanners":                          reflect.ValueOf(&discordgo.EndpointCDNBanners),
	"EndpointCDNChannelIcons":                     reflect.ValueOf(&discordgo.EndpointCDNChannelIcons),
	"EndpointCDNGuilds":                           reflect.ValueOf(&discordgo.EndpointCDNGuilds),
	"EndpointCDNIcons":                            reflect.ValueOf(&discordgo.EndpointCDNIcons),
	"EndpointCDNSplashes":                         reflect.ValueOf(&discordgo.EndpointCDNSplashes),
	"EndpointChannel":                             reflect.ValueOf(&discordgo.EndpointChannel),
	"EndpointChannelActiveThreads":                reflect.ValueOf(&discordgo.EndpointChannelActiveThreads),
	"EndpointChannelFollow":                       reflect.ValueOf(&discordgo.EndpointChannelFollow),
	"EndpointChannelInvites":                      reflect.ValueOf(&discordgo.EndpointChannelInvites),
	"EndpointChannelJoinedPrivateArchivedThreads": reflect.ValueOf(&discordgo.EndpointChannelJoinedPrivateArchivedThreads),
	"EndpointChannelMessage":                      reflect.ValueOf(&discordgo.EndpointChannelMessage),
	"EndpointChannelMessageCrosspost":             reflect.ValueOf(&discordgo.EndpointChannelMessageCrosspost),
	"EndpointChannelMessagePin":                   reflect.ValueOf(&discordgo.EndpointChannelMessagePin),
	"EndpointChannelMessageThread":                reflect.ValueOf(&discordgo.EndpointChannelMessageThread),
	"EndpointChannelMessages":                     reflect.ValueOf(&discordgo.EndpointChannelMessages),
	"EndpointChannelMessagesBulkDelete":           reflect.ValueOf(&discordgo.EndpointChannelMessagesBulkDelete),
	"EndpointChannelMessagesPins":                 reflect.ValueOf(&discordgo.EndpointChannelMessagesPins),
	"EndpointChannelPermission":                   reflect.ValueOf(&discordgo.EndpointChannelPermission),
	"EndpointChannelPermissions":                  reflect.ValueOf(&discordgo.EndpointChannelPermissions),
	"EndpointChannelPrivateArchivedThreads":       reflect.ValueOf(&discordgo.EndpointChannelPrivateArchivedThreads),
	"EndpointChannelPublicArchivedThreads":        reflect.ValueOf(&discordgo.EndpointChannelPublicArchivedThreads),
	"EndpointChannelThreads":                      reflect.ValueOf(&discordgo.EndpointChannelThreads),
	"EndpointChannelTyping":                       reflect.ValueOf(&discordgo.EndpointChannelTyping),
	"EndpointChannelWebhooks":                     reflect.ValueOf(&discordgo.EndpointChannelWebhooks),
	"EndpointChannels":                            reflect.ValueOf(&discordgo.EndpointChannels),
	"EndpointDefaultUserAvatar":                   reflect.ValueOf(&discordgo.EndpointDefaultUserAvatar),
	"EndpointDiscord":                             reflect.ValueOf(&discordgo.EndpointDiscord),
	"EndpointEmoji":                               reflect.ValueOf(&discordgo.EndpointEmoji),
	"EndpointEmojiAnimated":                       reflect.ValueOf(&discordgo.EndpointEmojiAnimated),
	"EndpointFollowupMessage":                     reflect.ValueOf(&discordgo.EndpointFollowupMessage),
	"EndpointFollowupMessageActions":              reflect.ValueOf(&discordgo.EndpointFollowupMessageActions),
	"EndpointGateway":                             reflect.ValueOf(&discordgo.EndpointGateway),
	"EndpointGatewayBot":                          reflect.ValueOf(&discordgo.EndpointGatewayBot),
	"EndpointGroupIcon":                           reflect.ValueOf(&discordgo.EndpointGroupIcon),
	"EndpointGuild":                               reflect.ValueOf(&discordgo.EndpointGuild),
	"EndpointGuildActiveThreads":                  reflect.ValueOf(&discordgo.EndpointGuildActiveThreads),
	"EndpointGuildAuditLogs":                      reflect.ValueOf(&discordgo.EndpointGuildAuditLogs),
	"EndpointGuildAutoModeration":                 reflect.ValueOf(&discordgo.EndpointGuildAutoModeration),
	"EndpointGuildAutoModerationRule":             reflect.ValueOf(&discordgo.EndpointGuildAutoModerationRule),
	"EndpointGuildAutoModerationRules":            reflect.ValueOf(&discordgo.EndpointGuildAutoModerationRules),
	"EndpointGuildBan":                            reflect.ValueOf(&discordgo.EndpointGuildBan),
	"EndpointGuildBanner":                         reflect.ValueOf(&discordgo.EndpointGuildBanner),
	"EndpointGuildBans":                           reflect.ValueOf(&discordgo.EndpointGuildBans),
	"EndpointGuildChannels":                       reflect.ValueOf(&discordgo.EndpointGuildChannels),
	"EndpointGuildCreate":                         reflect.ValueOf(&discordgo.EndpointGuildCreate),
	"EndpointGuildEmbed":                          reflect.ValueOf(&discordgo.EndpointGuildEmbed),
	"EndpointGuildEmoji":                          reflect.ValueOf(&discordgo.EndpointGuildEmoji),
	"EndpointGuildEmojis":                         reflect.ValueOf(&discordgo.EndpointGuildEmojis),
	"EndpointGuildIcon":                           reflect.ValueOf(&discordgo.EndpointGuildIcon),
	"EndpointGuildIconAnimated":                   reflect.ValueOf(&discordgo.EndpointGuildIconAnimated),
	"EndpointGuildIntegration":                    reflect.ValueOf(&discordgo.EndpointGuildIntegration),
	"EndpointGuildIntegrations":                   reflect.ValueOf(&discordgo.EndpointGuildIntegrations),
	"EndpointGuildInvites":                        reflect.ValueOf(&discordgo.EndpointGuildInvites),
	"EndpointGuildMember":                         reflect.ValueOf(&discordgo.EndpointGuildMember),
	"EndpointGuildMemberAvatar":                   reflect.ValueOf(&discordgo.EndpointGuildMemberAvatar),
	"EndpointGuildMemberAvatarAnimated":           reflect.ValueOf(&discordgo.EndpointGuildMemberAvatarAnimated),
	"EndpointGuildMemberRole":                     reflect.ValueOf(&discordgo.EndpointGuildMemberRole),
	"EndpointGuildMembers":                        reflect.ValueOf(&discordgo.EndpointGuildMembers),
	"EndpointGuildMembersSearch":                  reflect.ValueOf(&discordgo.EndpointGuildMembersSearch),
	"EndpointGuildPreview":                        reflect.ValueOf(&discordgo.EndpointGuildPreview),
	"EndpointGuildPrune":                          reflect.ValueOf(&discordgo.EndpointGuildPrune),
	"EndpointGuildRole":                           reflect.ValueOf(&discordgo.EndpointGuildRole),
	"EndpointGuildRoles":                          reflect.ValueOf(&discordgo.EndpointGuildRoles),
	"EndpointGuildScheduledEvent":                 reflect.ValueOf(&discordgo.EndpointGuildScheduledEvent),
	"EndpointGuildScheduledEventUsers":            reflect.ValueOf(&discordgo.EndpointGuildScheduledEventUsers),
	"EndpointGuildScheduledEvents":                reflect.ValueOf(&discordgo.EndpointGuildScheduledEvents),
	"EndpointGuildSplash":                         reflect.ValueOf(&discordgo.EndpointGuildSplash),
	"EndpointGuildSticker":                        reflect.ValueOf(&discordgo.EndpointGuildSticker),
	"EndpointGuildStickers":                       reflect.ValueOf(&discordgo.EndpointGuildStickers),
	"EndpointGuildTemplate":                       reflect.ValueOf(&discordgo.EndpointGuildTemplate),
	"EndpointGuildTemplateSync":                   reflect.ValueOf(&discordgo.EndpointGuildTemplateSync),
	"EndpointGuildTemplates":                      reflect.ValueOf(&discordgo.EndpointGuildTemplates),
	"EndpointGuildThreads":                        reflect.ValueOf(&discordgo.EndpointGuildThreads),
	"EndpointGuildWebhooks":                       reflect.ValueOf(&discordgo.EndpointGuildWebhooks),
	"EndpointGuildWidget":                         reflect.ValueOf(&discordgo.EndpointGuildWidget),
	"EndpointGuilds":                              reflect.ValueOf(&discordgo.EndpointGuilds),
	"EndpointInteraction":                         reflect.ValueOf(&discordgo.EndpointInteraction),
	"EndpointInteractionResponse":                 reflect.ValueOf(&discordgo.EndpointInteractionResponse),
	"EndpointInteractionResponseActions":          reflect.ValueOf(&discordgo.EndpointInteractionResponseActions),
	"EndpointInvite":                              reflect.ValueOf(&discordgo.EndpointInvite),
	"EndpointMessageReaction":                     reflect.ValueOf(&discordgo.EndpointMessageReaction),
	"EndpointMessageReactions":                    reflect.ValueOf(&discordgo.EndpointMessageReactions),
	"EndpointMessageReactionsAll":                 reflect.ValueOf(&discordgo.EndpointMessageReactionsAll),
	"EndpointNitroStickersPacks":                  reflect.ValueOf(&discordgo.EndpointNitroStickersPacks),
	"EndpointOAuth2":                              reflect.ValueOf(&discordgo.EndpointOAuth2),
	"EndpointOAuth2Application":                   reflect.ValueOf(&discordgo.EndpointOAuth2Application),
	"EndpointOAuth2ApplicationAssets":             reflect.ValueOf(&discordgo.EndpointOAuth2ApplicationAssets),
	"EndpointOAuth2Applications":                  reflect.ValueOf(&discordgo.EndpointOAuth2Applications),
	"EndpointOAuth2ApplicationsBot":               reflect.ValueOf(&discordgo.EndpointOAuth2ApplicationsBot),
	"EndpointOauth2":                              reflect.ValueOf(&discordgo.EndpointOauth2),
	"EndpointOauth2Application":                   reflect.ValueOf(&discordgo.EndpointOauth2Application),
	"EndpointOauth2ApplicationAssets":             reflect.ValueOf(&discordgo.EndpointOauth2ApplicationAssets),
	"EndpointOauth2Applications":                  reflect.ValueOf(&discordgo.EndpointOauth2Applications),
	"EndpointOauth2ApplicationsBot":               reflect.ValueOf(&discordgo.EndpointOauth2ApplicationsBot),
	"EndpointSm":                                  reflect.ValueOf(&discordgo.EndpointSm),
	"EndpointSmActive":                            reflect.ValueOf(&discordgo.EndpointSmActive),
	"EndpointSmUpcoming":                          reflect.ValueOf(&discordgo.EndpointSmUpcoming),
	"EndpointStageInstance":                       reflect.ValueOf(&discordgo.EndpointStageInstance),
	"EndpointStageInstances":                      reflect.ValueOf(&discordgo.EndpointStageInstances),
	"EndpointStatus":                              reflect.ValueOf(&discordgo.EndpointStatus),
	"EndpointSticker":                             reflect.ValueOf(&discordgo.EndpointSticker),
	"EndpointStickers":                            reflect.ValueOf(&discordgo.EndpointStickers),
	"EndpointThreadMember":                        reflect.ValueOf(&discordgo.EndpointThreadMember),
	"EndpointThreadMembers":                       reflect.ValueOf(&discordgo.EndpointThreadMembers),
	"EndpointUser":                                reflect.ValueOf(&discordgo.EndpointUser),
	"EndpointUserAvatar":                          reflect.ValueOf(&discordgo.EndpointUserAvatar),
	"EndpointUserAvatarAnimated":                  reflect.ValueOf(&discordgo.EndpointUserAvatarAnimated),
	"EndpointUserBanner":                          reflect.ValueOf(&discordgo.EndpointUserBanner),
	"EndpointUserBannerAnimated":                  reflect.ValueOf(&discordgo.EndpointUserBannerAnimated),
	"EndpointUserChannels":                        reflect.ValueOf(&discordgo.EndpointUserChannels),
	"EndpointUserConnections":                     reflect.ValueOf(&discordgo.EndpointUserConnections),
	"EndpointUserGuild":                           reflect.ValueOf(&discordgo.EndpointUserGuild),
	"EndpointUserGuildMember":                     reflect.ValueOf(&discordgo.EndpointUserGuildMember),
	"EndpointUserGuilds":                          reflect.ValueOf(&discordgo.EndpointUserGuilds),
	"EndpointUsers":                               reflect.ValueOf(&discordgo.EndpointUsers),
	"EndpointVoice":                               reflect.ValueOf(&discordgo.EndpointVoice),
	"EndpointVoiceRegions":                        reflect.ValueOf(&discordgo.EndpointVoiceRegions),
	"EndpointWebhook":                             reflect.ValueOf(&discordgo.EndpointWebhook),
	"EndpointWebhookMessage":                      reflect.ValueOf(&discordgo.EndpointWebhookMessage),
	"EndpointWebhookToken":                        reflect.ValueOf(&discordgo.EndpointWebhookToken),
	"EndpointWebhooks":                            reflect.ValueOf(&discordgo.EndpointWebhooks),
	"ErrGuildNoIcon":                              reflect.ValueOf(&discordgo.ErrGuildNoIcon),
	"ErrGuildNoSplash":                            reflect.ValueOf(&discordgo.ErrGuildNoSplash),
	"ErrJSONUnmarshal":                            reflect.ValueOf(&discordgo.ErrJSONUnmarshal),
	"ErrMessageIncompletePermissions":             reflect.ValueOf(&discordgo.ErrMessageIncompletePermissions),
	"ErrNilState":                                 reflect.ValueOf(&discordgo.ErrNilState),
	"ErrPruneDaysBounds":                          reflect.ValueOf(&discordgo.ErrPruneDaysBounds),
	"ErrStateNotFound":                            reflect.ValueOf(&discordgo.ErrStateNotFound),
	"ErrStatusOffline":                            reflect.ValueOf(&discordgo.ErrStatusOffline),
	"ErrUnauthorized":                             reflect.ValueOf(&discordgo.ErrUnauthorized),
	"ErrVerificationLevelBounds":                  reflect.ValueOf(&discordgo.ErrVerificationLevelBounds),
	"ErrWSAlreadyOpen":                            reflect.ValueOf(&discordgo.ErrWSAlreadyOpen),
	"ErrWSNotFound":                               reflect.ValueOf(&discordgo.ErrWSNotFound),
	"ErrWSShardBounds":                            reflect.ValueOf(&discordgo.ErrWSShardBounds),
	"Locales":                                     reflect.ValueOf(&discordgo.Locales),
	"Logger":                                      reflect.ValueOf(&discordgo.Logger),
	"Marshal":                                     reflect.ValueOf(&discordgo.Marshal),
	"Unmarshal":                                   reflect.ValueOf(&discordgo.Unmarshal),
}

// extpkgDiscordGoConsts contains the functions of the discordgo package
var extpkgDiscordGoConsts = map[string]reflect.Value{
	"ActionsRowComponent":                                                     reflect.ValueOf(discordgo.ActionsRowComponent),
	"ActivityTypeCompeting":                                                   reflect.ValueOf(discordgo.ActivityTypeCompeting),
	"ActivityTypeCustom":                                                      reflect.ValueOf(discordgo.ActivityTypeCustom),
	"ActivityTypeGame":                                                        reflect.ValueOf(discordgo.ActivityTypeGame),
	"ActivityTypeListening":                                                   reflect.ValueOf(discordgo.ActivityTypeListening),
	"ActivityTypeStreaming":                                                   reflect.ValueOf(discordgo.ActivityTypeStreaming),
	"ActivityTypeWatching":                                                    reflect.ValueOf(discordgo.ActivityTypeWatching),
	"AllowedMentionTypeEveryone":                                              reflect.ValueOf(discordgo.AllowedMentionTypeEveryone),
	"AllowedMentionTypeRoles":                                                 reflect.ValueOf(discordgo.AllowedMentionTypeRoles),
	"AllowedMentionTypeUsers":                                                 reflect.ValueOf(discordgo.AllowedMentionTypeUsers),
	"ApplicationCommandOptionAttachment":                                      reflect.ValueOf(discordgo.ApplicationCommandOptionAttachment),
	"ApplicationCommandOptionBoolean":                                         reflect.ValueOf(discordgo.ApplicationCommandOptionBoolean),
	"ApplicationCommandOptionChannel":                                         reflect.ValueOf(discordgo.ApplicationCommandOptionChannel),
	"ApplicationCommandOptionInteger":                                         reflect.ValueOf(discordgo.ApplicationCommandOptionInteger),
	"ApplicationCommandOptionMentionable":                                     reflect.ValueOf(discordgo.ApplicationCommandOptionMentionable),
	"ApplicationCommandOptionNumber":                                          reflect.ValueOf(discordgo.ApplicationCommandOptionNumber),
	"ApplicationCommandOptionRole":                                            reflect.ValueOf(discordgo.ApplicationCommandOptionRole),
	"ApplicationCommandOptionString":                                          reflect.ValueOf(discordgo.ApplicationCommandOptionString),
	"ApplicationCommandOptionSubCommand":                                      reflect.ValueOf(discordgo.ApplicationCommandOptionSubCommand),
	"ApplicationCommandOptionSubCommandGroup":                                 reflect.ValueOf(discordgo.ApplicationCommandOptionSubCommandGroup),
	"ApplicationCommandOptionUser":                                            reflect.ValueOf(discordgo.ApplicationCommandOptionUser),
	"ApplicationCommandPermissionTypeChannel":                                 reflect.ValueOf(discordgo.ApplicationCommandPermissionTypeChannel),
	"ApplicationCommandPermissionTypeRole":                                    reflect.ValueOf(discordgo.ApplicationCommandPermissionTypeRole),
	"ApplicationCommandPermissionTypeUser":                                    reflect.ValueOf(discordgo.ApplicationCommandPermissionTypeUser),
	"AuditLogActionApplicationCommandPermissionUpdate":                        reflect.ValueOf(discordgo.AuditLogActionApplicationCommandPermissionUpdate),
	"AuditLogActionBotAdd":                                                    reflect.ValueOf(discordgo.AuditLogActionBotAdd),
	"AuditLogActionChannelCreate":                                             reflect.ValueOf(discordgo.AuditLogActionChannelCreate),
	"AuditLogActionChannelDelete":                                             reflect.ValueOf(discordgo.AuditLogActionChannelDelete),
	"AuditLogActionChannelOverwriteCreate":                                    reflect.ValueOf(discordgo.AuditLogActionChannelOverwriteCreate),
	"AuditLogActionChannelOverwriteDelete":                                    reflect.ValueOf(discordgo.AuditLogActionChannelOverwriteDelete),
	"AuditLogActionChannelOverwriteUpdate":                                    reflect.ValueOf(discordgo.AuditLogActionChannelOverwriteUpdate),
	"AuditLogActionChannelUpdate":                                             reflect.ValueOf(discordgo.AuditLogActionChannelUpdate),
	"AuditLogActionEmojiCreate":                                               reflect.ValueOf(discordgo.AuditLogActionEmojiCreate),
	"AuditLogActionEmojiDelete":                                               reflect.ValueOf(discordgo.AuditLogActionEmojiDelete),
	"AuditLogActionEmojiUpdate":                                               reflect.ValueOf(discordgo.AuditLogActionEmojiUpdate),
	"AuditLogActionGuildUpdate":                                               reflect.ValueOf(discordgo.AuditLogActionGuildUpdate),
	"AuditLogActionIntegrationCreate":                                         reflect.ValueOf(discordgo.AuditLogActionIntegrationCreate),
	"AuditLogActionIntegrationDelete":                                         reflect.ValueOf(discordgo.AuditLogActionIntegrationDelete),
	"AuditLogActionIntegrationUpdate":                                         reflect.ValueOf(discordgo.AuditLogActionIntegrationUpdate),
	"AuditLogActionInviteCreate":                                              reflect.ValueOf(discordgo.AuditLogActionInviteCreate),
	"AuditLogActionInviteDelete":                                              reflect.ValueOf(discordgo.AuditLogActionInviteDelete),
	"AuditLogActionInviteUpdate":                                              reflect.ValueOf(discordgo.AuditLogActionInviteUpdate),
	"AuditLogActionMemberBanAdd":                                              reflect.ValueOf(discordgo.AuditLogActionMemberBanAdd),
	"AuditLogActionMemberBanRemove":                                           reflect.ValueOf(discordgo.AuditLogActionMemberBanRemove),
	"AuditLogActionMemberDisconnect":                                          reflect.ValueOf(discordgo.AuditLogActionMemberDisconnect),
	"AuditLogActionMemberKick":                                                reflect.ValueOf(discordgo.AuditLogActionMemberKick),
	"AuditLogActionMemberMove":                                                reflect.ValueOf(discordgo.AuditLogActionMemberMove),
	"AuditLogActionMemberPrune":                                               reflect.ValueOf(discordgo.AuditLogActionMemberPrune),
	"AuditLogActionMemberRoleUpdate":                                          reflect.ValueOf(discordgo.AuditLogActionMemberRoleUpdate),
	"AuditLogActionMemberUpdate":                                              reflect.ValueOf(discordgo.AuditLogActionMemberUpdate),
	"AuditLogActionMessageBulkDelete":                                         reflect.ValueOf(discordgo.AuditLogActionMessageBulkDelete),
	"AuditLogActionMessageDelete":                                             reflect.ValueOf(discordgo.AuditLogActionMessageDelete),
	"AuditLogActionMessagePin":                                                reflect.ValueOf(discordgo.AuditLogActionMessagePin),
	"AuditLogActionMessageUnpin":                                              reflect.ValueOf(discordgo.AuditLogActionMessageUnpin),
	"AuditLogActionRoleCreate":                                                reflect.ValueOf(discordgo.AuditLogActionRoleCreate),
	"AuditLogActionRoleDelete":                                                reflect.ValueOf(discordgo.AuditLogActionRoleDelete),
	"AuditLogActionRoleUpdate":                                                reflect.ValueOf(discordgo.AuditLogActionRoleUpdate),
	"AuditLogActionStageInstanceCreate":                                       reflect.ValueOf(discordgo.AuditLogActionStageInstanceCreate),
	"AuditLogActionStageInstanceDelete":                                       reflect.ValueOf(discordgo.AuditLogActionStageInstanceDelete),
	"AuditLogActionStageInstanceUpdate":                                       reflect.ValueOf(discordgo.AuditLogActionStageInstanceUpdate),
	"AuditLogActionStickerCreate":                                             reflect.ValueOf(discordgo.AuditLogActionStickerCreate),
	"AuditLogActionStickerDelete":                                             reflect.ValueOf(discordgo.AuditLogActionStickerDelete),
	"AuditLogActionStickerUpdate":                                             reflect.ValueOf(discordgo.AuditLogActionStickerUpdate),
	"AuditLogActionThreadCreate":                                              reflect.ValueOf(discordgo.AuditLogActionThreadCreate),
	"AuditLogActionThreadDelete":                                              reflect.ValueOf(discordgo.AuditLogActionThreadDelete),
	"AuditLogActionThreadUpdate":                                              reflect.ValueOf(discordgo.AuditLogActionThreadUpdate),
	"AuditLogActionWebhookCreate":                                             reflect.ValueOf(discordgo.AuditLogActionWebhookCreate),
	"AuditLogActionWebhookDelete":                                             reflect.ValueOf(discordgo.AuditLogActionWebhookDelete),
	"AuditLogActionWebhookUpdate":                                             reflect.ValueOf(discordgo.AuditLogActionWebhookUpdate),
	"AuditLogChangeKeyAfkChannelID":                                           reflect.ValueOf(discordgo.AuditLogChangeKeyAfkChannelID),
	"AuditLogChangeKeyAfkTimeout":                                             reflect.ValueOf(discordgo.AuditLogChangeKeyAfkTimeout),
	"AuditLogChangeKeyAllow":                                                  reflect.ValueOf(discordgo.AuditLogChangeKeyAllow),
	"AuditLogChangeKeyApplicationID":                                          reflect.ValueOf(discordgo.AuditLogChangeKeyApplicationID),
	"AuditLogChangeKeyArchived":                                               reflect.ValueOf(discordgo.AuditLogChangeKeyArchived),
	"AuditLogChangeKeyAsset":                                                  reflect.ValueOf(discordgo.AuditLogChangeKeyAsset),
	"AuditLogChangeKeyAutoArchiveDuration":                                    reflect.ValueOf(discordgo.AuditLogChangeKeyAutoArchiveDuration),
	"AuditLogChangeKeyAvailable":                                              reflect.ValueOf(discordgo.AuditLogChangeKeyAvailable),
	"AuditLogChangeKeyAvatarHash":                                             reflect.ValueOf(discordgo.AuditLogChangeKeyAvatarHash),
	"AuditLogChangeKeyBannerHash":                                             reflect.ValueOf(discordgo.AuditLogChangeKeyBannerHash),
	"AuditLogChangeKeyBitrate":                                                reflect.ValueOf(discordgo.AuditLogChangeKeyBitrate),
	"AuditLogChangeKeyChannelID":                                              reflect.ValueOf(discordgo.AuditLogChangeKeyChannelID),
	"AuditLogChangeKeyCode":                                                   reflect.ValueOf(discordgo.AuditLogChangeKeyCode),
	"AuditLogChangeKeyColor":                                                  reflect.ValueOf(discordgo.AuditLogChangeKeyColor),
	"AuditLogChangeKeyCommunicationDisabledUntil":                             reflect.ValueOf(discordgo.AuditLogChangeKeyCommunicationDisabledUntil),
	"AuditLogChangeKeyDeaf":                                                   reflect.ValueOf(discordgo.AuditLogChangeKeyDeaf),
	"AuditLogChangeKeyDefaultAutoArchiveDuration":                             reflect.ValueOf(discordgo.AuditLogChangeKeyDefaultAutoArchiveDuration),
	"AuditLogChangeKeyDefaultMessageNotification":                             reflect.ValueOf(discordgo.AuditLogChangeKeyDefaultMessageNotification),
	"AuditLogChangeKeyDeny":                                                   reflect.ValueOf(discordgo.AuditLogChangeKeyDeny),
	"AuditLogChangeKeyDescription":                                            reflect.ValueOf(discordgo.AuditLogChangeKeyDescription),
	"AuditLogChangeKeyDiscoverySplashHash":                                    reflect.ValueOf(discordgo.AuditLogChangeKeyDiscoverySplashHash),
	"AuditLogChangeKeyEnableEmoticons":                                        reflect.ValueOf(discordgo.AuditLogChangeKeyEnableEmoticons),
	"AuditLogChangeKeyEntityType":                                             reflect.ValueOf(discordgo.AuditLogChangeKeyEntityType),
	"AuditLogChangeKeyExpireBehavior":                                         reflect.ValueOf(discordgo.AuditLogChangeKeyExpireBehavior),
	"AuditLogChangeKeyExpireGracePeriod":                                      reflect.ValueOf(discordgo.AuditLogChangeKeyExpireGracePeriod),
	"AuditLogChangeKeyExplicitContentFilter":                                  reflect.ValueOf(discordgo.AuditLogChangeKeyExplicitContentFilter),
	"AuditLogChangeKeyFormatType":                                             reflect.ValueOf(discordgo.AuditLogChangeKeyFormatType),
	"AuditLogChangeKeyGuildID":                                                reflect.ValueOf(discordgo.AuditLogChangeKeyGuildID),
	"AuditLogChangeKeyHoist":                                                  reflect.ValueOf(discordgo.AuditLogChangeKeyHoist),
	"AuditLogChangeKeyID":                                                     reflect.ValueOf(discordgo.AuditLogChangeKeyID),
	"AuditLogChangeKeyIconHash":                                               reflect.ValueOf(discordgo.AuditLogChangeKeyIconHash),
	"AuditLogChangeKeyInvitable":                                              reflect.ValueOf(discordgo.AuditLogChangeKeyInvitable),
	"AuditLogChangeKeyInviterID":                                              reflect.ValueOf(discordgo.AuditLogChangeKeyInviterID),
	"AuditLogChangeKeyLocation":                                               reflect.ValueOf(discordgo.AuditLogChangeKeyLocation),
	"AuditLogChangeKeyLocked":                                                 reflect.ValueOf(discordgo.AuditLogChangeKeyLocked),
	"AuditLogChangeKeyMaxAge":                                                 reflect.ValueOf(discordgo.AuditLogChangeKeyMaxAge),
	"AuditLogChangeKeyMaxUses":                                                reflect.ValueOf(discordgo.AuditLogChangeKeyMaxUses),
	"AuditLogChangeKeyMentionable":                                            reflect.ValueOf(discordgo.AuditLogChangeKeyMentionable),
	"AuditLogChangeKeyMfaLevel":                                               reflect.ValueOf(discordgo.AuditLogChangeKeyMfaLevel),
	"AuditLogChangeKeyMute":                                                   reflect.ValueOf(discordgo.AuditLogChangeKeyMute),
	"AuditLogChangeKeyNSFW":                                                   reflect.ValueOf(discordgo.AuditLogChangeKeyNSFW),
	"AuditLogChangeKeyName":                                                   reflect.ValueOf(discordgo.AuditLogChangeKeyName),
	"AuditLogChangeKeyNick":                                                   reflect.ValueOf(discordgo.AuditLogChangeKeyNick),
	"AuditLogChangeKeyOwnerID":                                                reflect.ValueOf(discordgo.AuditLogChangeKeyOwnerID),
	"AuditLogChangeKeyPermissionOverwrite":                                    reflect.ValueOf(discordgo.AuditLogChangeKeyPermissionOverwrite),
	"AuditLogChangeKeyPermissions":                                            reflect.ValueOf(discordgo.AuditLogChangeKeyPermissions),
	"AuditLogChangeKeyPosition":                                               reflect.ValueOf(discordgo.AuditLogChangeKeyPosition),
	"AuditLogChangeKeyPreferredLocale":                                        reflect.ValueOf(discordgo.AuditLogChangeKeyPreferredLocale),
	"AuditLogChangeKeyPrivacylevel":                                           reflect.ValueOf(discordgo.AuditLogChangeKeyPrivacylevel),
	"AuditLogChangeKeyPruneDeleteDays":                                        reflect.ValueOf(discordgo.AuditLogChangeKeyPruneDeleteDays),
	"AuditLogChangeKeyPulibUpdatesChannelID":                                  reflect.ValueOf(discordgo.AuditLogChangeKeyPulibUpdatesChannelID),
	"AuditLogChangeKeyRateLimitPerUser":                                       reflect.ValueOf(discordgo.AuditLogChangeKeyRateLimitPerUser),
	"AuditLogChangeKeyRegion":                                                 reflect.ValueOf(discordgo.AuditLogChangeKeyRegion),
	"AuditLogChangeKeyRoleAdd":                                                reflect.ValueOf(discordgo.AuditLogChangeKeyRoleAdd),
	"AuditLogChangeKeyRoleRemove":                                             reflect.ValueOf(discordgo.AuditLogChangeKeyRoleRemove),
	"AuditLogChangeKeyRulesChannelID":                                         reflect.ValueOf(discordgo.AuditLogChangeKeyRulesChannelID),
	"AuditLogChangeKeySplashHash":                                             reflect.ValueOf(discordgo.AuditLogChangeKeySplashHash),
	"AuditLogChangeKeyStatus":                                                 reflect.ValueOf(discordgo.AuditLogChangeKeyStatus),
	"AuditLogChangeKeySystemChannelID":                                        reflect.ValueOf(discordgo.AuditLogChangeKeySystemChannelID),
	"AuditLogChangeKeyTags":                                                   reflect.ValueOf(discordgo.AuditLogChangeKeyTags),
	"AuditLogChangeKeyTempoary":                                               reflect.ValueOf(discordgo.AuditLogChangeKeyTempoary),
	"AuditLogChangeKeyTemporary":                                              reflect.ValueOf(discordgo.AuditLogChangeKeyTemporary),
	"AuditLogChangeKeyTopic":                                                  reflect.ValueOf(discordgo.AuditLogChangeKeyTopic),
	"AuditLogChangeKeyType":                                                   reflect.ValueOf(discordgo.AuditLogChangeKeyType),
	"AuditLogChangeKeyUnicodeEmoji":                                           reflect.ValueOf(discordgo.AuditLogChangeKeyUnicodeEmoji),
	"AuditLogChangeKeyUserLimit":                                              reflect.ValueOf(discordgo.AuditLogChangeKeyUserLimit),
	"AuditLogChangeKeyUses":                                                   reflect.ValueOf(discordgo.AuditLogChangeKeyUses),
	"AuditLogChangeKeyVanityURLCode":                                          reflect.ValueOf(discordgo.AuditLogChangeKeyVanityURLCode),
	"AuditLogChangeKeyVerificationLevel":                                      reflect.ValueOf(discordgo.AuditLogChangeKeyVerificationLevel),
	"AuditLogChangeKeyWidgetChannelID":                                        reflect.ValueOf(discordgo.AuditLogChangeKeyWidgetChannelID),
	"AuditLogChangeKeyWidgetEnabled":                                          reflect.ValueOf(discordgo.AuditLogChangeKeyWidgetEnabled),
	"AuditLogGuildScheduledEventCreate":                                       reflect.ValueOf(discordgo.AuditLogGuildScheduledEventCreate),
	"AuditLogGuildScheduledEventDelete":                                       reflect.ValueOf(discordgo.AuditLogGuildScheduledEventDelete),
	"AuditLogGuildScheduledEventUpdare":                                       reflect.ValueOf(discordgo.AuditLogGuildScheduledEventUpdare),
	"AuditLogOptionsTypeMember":                                               reflect.ValueOf(discordgo.AuditLogOptionsTypeMember),
	"AuditLogOptionsTypeRole":                                                 reflect.ValueOf(discordgo.AuditLogOptionsTypeRole),
	"AutoModerationEventMessageSend":                                          reflect.ValueOf(discordgo.AutoModerationEventMessageSend),
	"AutoModerationEventTriggerHarmfulLink":                                   reflect.ValueOf(discordgo.AutoModerationEventTriggerHarmfulLink),
	"AutoModerationEventTriggerKeyword":                                       reflect.ValueOf(discordgo.AutoModerationEventTriggerKeyword),
	"AutoModerationEventTriggerKeywordPreset":                                 reflect.ValueOf(discordgo.AutoModerationEventTriggerKeywordPreset),
	"AutoModerationEventTriggerSpam":                                          reflect.ValueOf(discordgo.AutoModerationEventTriggerSpam),
	"AutoModerationKeywordPresetProfanity":                                    reflect.ValueOf(discordgo.AutoModerationKeywordPresetProfanity),
	"AutoModerationKeywordPresetSexualContent":                                reflect.ValueOf(discordgo.AutoModerationKeywordPresetSexualContent),
	"AutoModerationKeywordPresetSlurs":                                        reflect.ValueOf(discordgo.AutoModerationKeywordPresetSlurs),
	"AutoModerationRuleActionBlockMessage":                                    reflect.ValueOf(discordgo.AutoModerationRuleActionBlockMessage),
	"AutoModerationRuleActionSendAlertMessage":                                reflect.ValueOf(discordgo.AutoModerationRuleActionSendAlertMessage),
	"AutoModerationRuleActionTimeout":                                         reflect.ValueOf(discordgo.AutoModerationRuleActionTimeout),
	"Bulgarian":                                                               reflect.ValueOf(discordgo.Bulgarian),
	"ButtonComponent":                                                         reflect.ValueOf(discordgo.ButtonComponent),
	"ChannelTypeDM":                                                           reflect.ValueOf(discordgo.ChannelTypeDM),
	"ChannelTypeGroupDM":                                                      reflect.ValueOf(discordgo.ChannelTypeGroupDM),
	"ChannelTypeGuildCategory":                                                reflect.ValueOf(discordgo.ChannelTypeGuildCategory),
	"ChannelTypeGuildNews":                                                    reflect.ValueOf(discordgo.ChannelTypeGuildNews),
	"ChannelTypeGuildNewsThread":                                              reflect.ValueOf(discordgo.ChannelTypeGuildNewsThread),
	"ChannelTypeGuildPrivateThread":                                           reflect.ValueOf(discordgo.ChannelTypeGuildPrivateThread),
	"ChannelTypeGuildPublicThread":                                            reflect.ValueOf(discordgo.ChannelTypeGuildPublicThread),
	"ChannelTypeGuildStageVoice":                                              reflect.ValueOf(discordgo.ChannelTypeGuildStageVoice),
	"ChannelTypeGuildStore":                                                   reflect.ValueOf(discordgo.ChannelTypeGuildStore),
	"ChannelTypeGuildText":                                                    reflect.ValueOf(discordgo.ChannelTypeGuildText),
	"ChannelTypeGuildVoice":                                                   reflect.ValueOf(discordgo.ChannelTypeGuildVoice),
	"ChatApplicationCommand":                                                  reflect.ValueOf(discordgo.ChatApplicationCommand),
	"ChineseCN":                                                               reflect.ValueOf(discordgo.ChineseCN),
	"ChineseTW":                                                               reflect.ValueOf(discordgo.ChineseTW),
	"Croatian":                                                                reflect.ValueOf(discordgo.Croatian),
	"Czech":                                                                   reflect.ValueOf(discordgo.Czech),
	"DangerButton":                                                            reflect.ValueOf(discordgo.DangerButton),
	"Danish":                                                                  reflect.ValueOf(discordgo.Danish),
	"Dutch":                                                                   reflect.ValueOf(discordgo.Dutch),
	"EmbedTypeArticle":                                                        reflect.ValueOf(discordgo.EmbedTypeArticle),
	"EmbedTypeGifv":                                                           reflect.ValueOf(discordgo.EmbedTypeGifv),
	"EmbedTypeImage":                                                          reflect.ValueOf(discordgo.EmbedTypeImage),
	"EmbedTypeLink":                                                           reflect.ValueOf(discordgo.EmbedTypeLink),
	"EmbedTypeRich":                                                           reflect.ValueOf(discordgo.EmbedTypeRich),
	"EmbedTypeVideo":                                                          reflect.ValueOf(discordgo.EmbedTypeVideo),
	"EnglishGB":                                                               reflect.ValueOf(discordgo.EnglishGB),
	"EnglishUS":                                                               reflect.ValueOf(discordgo.EnglishUS),
	"ErrCodeAPIResourceIsCurrentlyOverloaded":                                 reflect.ValueOf(discordgo.ErrCodeAPIResourceIsCurrentlyOverloaded),
	"ErrCodeActionRequiredVerifiedAccount":                                    reflect.ValueOf(discordgo.ErrCodeActionRequiredVerifiedAccount),
	"ErrCodeAnApplicationWithThatNameAlreadyExists":                           reflect.ValueOf(discordgo.ErrCodeAnApplicationWithThatNameAlreadyExists),
	"ErrCodeBeforeValueIsEarlierThanThreadCreationDate":                       reflect.ValueOf(discordgo.ErrCodeBeforeValueIsEarlierThanThreadCreationDate),
	"ErrCodeBotsCannotUseEndpoint":                                            reflect.ValueOf(discordgo.ErrCodeBotsCannotUseEndpoint),
	"ErrCodeCanOnlyPinMessageToOriginatingChannel":                            reflect.ValueOf(discordgo.ErrCodeCanOnlyPinMessageToOriginatingChannel),
	"ErrCodeCannotDeleteAChannelRequiredForCommunityGuilds":                   reflect.ValueOf(discordgo.ErrCodeCannotDeleteAChannelRequiredForCommunityGuilds),
	"ErrCodeCannotEditFromAnotherUser":                                        reflect.ValueOf(discordgo.ErrCodeCannotEditFromAnotherUser),
	"ErrCodeCannotExecuteActionOnDMChannel":                                   reflect.ValueOf(discordgo.ErrCodeCannotExecuteActionOnDMChannel),
	"ErrCodeCannotExecuteActionOnSystemMessage":                               reflect.ValueOf(discordgo.ErrCodeCannotExecuteActionOnSystemMessage),
	"ErrCodeCannotExecuteActionOnThisChannelType":                             reflect.ValueOf(discordgo.ErrCodeCannotExecuteActionOnThisChannelType),
	"ErrCodeCannotReplyWithoutPermissionToReadMessageHistory":                 reflect.ValueOf(discordgo.ErrCodeCannotReplyWithoutPermissionToReadMessageHistory),
	"ErrCodeCannotSendEmptyMessage":                                           reflect.ValueOf(discordgo.ErrCodeCannotSendEmptyMessage),
	"ErrCodeCannotSendMessagesInVoiceChannel":                                 reflect.ValueOf(discordgo.ErrCodeCannotSendMessagesInVoiceChannel),
	"ErrCodeCannotSendMessagesToThisUser":                                     reflect.ValueOf(discordgo.ErrCodeCannotSendMessagesToThisUser),
	"ErrCodeCannotUpdateAFinishedEvent":                                       reflect.ValueOf(discordgo.ErrCodeCannotUpdateAFinishedEvent),
	"ErrCodeChannelHasHitWriteRateLimit":                                      reflect.ValueOf(discordgo.ErrCodeChannelHasHitWriteRateLimit),
	"ErrCodeChannelVerificationLevelTooHigh":                                  reflect.ValueOf(discordgo.ErrCodeChannelVerificationLevelTooHigh),
	"ErrCodeCommunityServerChannelsMustBeTextChannels":                        reflect.ValueOf(discordgo.ErrCodeCommunityServerChannelsMustBeTextChannels),
	"ErrCodeEmbedDisabled":                                                    reflect.ValueOf(discordgo.ErrCodeEmbedDisabled),
	"ErrCodeExplicitContentCannotBeSentToTheDesiredRecipients":                reflect.ValueOf(discordgo.ErrCodeExplicitContentCannotBeSentToTheDesiredRecipients),
	"ErrCodeFailedToCreateStageNeededForStageEvent":                           reflect.ValueOf(discordgo.ErrCodeFailedToCreateStageNeededForStageEvent),
	"ErrCodeFeatureTemporarilyDisabledServerSide":                             reflect.ValueOf(discordgo.ErrCodeFeatureTemporarilyDisabledServerSide),
	"ErrCodeFileUploadedExceedsTheMaximumSize":                                reflect.ValueOf(discordgo.ErrCodeFileUploadedExceedsTheMaximumSize),
	"ErrCodeGeneralError":                                                     reflect.ValueOf(discordgo.ErrCodeGeneralError),
	"ErrCodeGuildAlreadyHasATemplate":                                         reflect.ValueOf(discordgo.ErrCodeGuildAlreadyHasATemplate),
	"ErrCodeGuildPremiumSubscriptionLevelTooLow":                              reflect.ValueOf(discordgo.ErrCodeGuildPremiumSubscriptionLevelTooLow),
	"ErrCodeGuildWidgetDisabled":                                              reflect.ValueOf(discordgo.ErrCodeGuildWidgetDisabled),
	"ErrCodeInteractionHasAlreadyBeenAcknowledged":                            reflect.ValueOf(discordgo.ErrCodeInteractionHasAlreadyBeenAcknowledged),
	"ErrCodeInvalidAPIVersionProvided":                                        reflect.ValueOf(discordgo.ErrCodeInvalidAPIVersionProvided),
	"ErrCodeInvalidAccountType":                                               reflect.ValueOf(discordgo.ErrCodeInvalidAccountType),
	"ErrCodeInvalidAuthenticationToken":                                       reflect.ValueOf(discordgo.ErrCodeInvalidAuthenticationToken),
	"ErrCodeInvalidFileUploaded":                                              reflect.ValueOf(discordgo.ErrCodeInvalidFileUploaded),
	"ErrCodeInvalidFormBody":                                                  reflect.ValueOf(discordgo.ErrCodeInvalidFormBody),
	"ErrCodeInvalidGuild":                                                     reflect.ValueOf(discordgo.ErrCodeInvalidGuild),
	"ErrCodeInvalidJSONForUploadedLottieFile":                                 reflect.ValueOf(discordgo.ErrCodeInvalidJSONForUploadedLottieFile),
	"ErrCodeInvalidMessageType":                                               reflect.ValueOf(discordgo.ErrCodeInvalidMessageType),
	"ErrCodeInvalidOAuth2AccessTokenProvided":                                 reflect.ValueOf(discordgo.ErrCodeInvalidOAuth2AccessTokenProvided),
	"ErrCodeInvalidOAuthState":                                                reflect.ValueOf(discordgo.ErrCodeInvalidOAuthState),
	"ErrCodeInvalidRecipients":                                                reflect.ValueOf(discordgo.ErrCodeInvalidRecipients),
	"ErrCodeInvalidRole":                                                      reflect.ValueOf(discordgo.ErrCodeInvalidRole),
	"ErrCodeInvalidStickerSent":                                               reflect.ValueOf(discordgo.ErrCodeInvalidStickerSent),
	"ErrCodeInvalidWebhookTokenProvided":                                      reflect.ValueOf(discordgo.ErrCodeInvalidWebhookTokenProvided),
	"ErrCodeInviteAcceptedToGuildApplicationsBotNotIn":                        reflect.ValueOf(discordgo.ErrCodeInviteAcceptedToGuildApplicationsBotNotIn),
	"ErrCodeInviteCodeWasEitherInvalidOrTaken":                                reflect.ValueOf(discordgo.ErrCodeInviteCodeWasEitherInvalidOrTaken),
	"ErrCodeLottieAnimationMaximumDimensionsExceeded":                         reflect.ValueOf(discordgo.ErrCodeLottieAnimationMaximumDimensionsExceeded),
	"ErrCodeMaximumGuildRolesReached":                                         reflect.ValueOf(discordgo.ErrCodeMaximumGuildRolesReached),
	"ErrCodeMaximumGuildsReached":                                             reflect.ValueOf(discordgo.ErrCodeMaximumGuildsReached),
	"ErrCodeMaximumNumberOfActiveAnnouncementThreadsReached":                  reflect.ValueOf(discordgo.ErrCodeMaximumNumberOfActiveAnnouncementThreadsReached),
	"ErrCodeMaximumNumberOfActiveThreadsReached":                              reflect.ValueOf(discordgo.ErrCodeMaximumNumberOfActiveThreadsReached),
	"ErrCodeMaximumNumberOfAnimatedEmojisReached":                             reflect.ValueOf(discordgo.ErrCodeMaximumNumberOfAnimatedEmojisReached),
	"ErrCodeMaximumNumberOfAttachmentsInAMessageReached":                      reflect.ValueOf(discordgo.ErrCodeMaximumNumberOfAttachmentsInAMessageReached),
	"ErrCodeMaximumNumberOfBansFetchesHasBeenReached":                         reflect.ValueOf(discordgo.ErrCodeMaximumNumberOfBansFetchesHasBeenReached),
	"ErrCodeMaximumNumberOfBansForNonGuildMembersHaveBeenExceeded":            reflect.ValueOf(discordgo.ErrCodeMaximumNumberOfBansForNonGuildMembersHaveBeenExceeded),
	"ErrCodeMaximumNumberOfEditsToMessagesOlderThanOneHourReached":            reflect.ValueOf(discordgo.ErrCodeMaximumNumberOfEditsToMessagesOlderThanOneHourReached),
	"ErrCodeMaximumNumberOfEmojisReached":                                     reflect.ValueOf(discordgo.ErrCodeMaximumNumberOfEmojisReached),
	"ErrCodeMaximumNumberOfGuildChannelsReached":                              reflect.ValueOf(discordgo.ErrCodeMaximumNumberOfGuildChannelsReached),
	"ErrCodeMaximumNumberOfGuildDiscoverySubcategoriesReached":                reflect.ValueOf(discordgo.ErrCodeMaximumNumberOfGuildDiscoverySubcategoriesReached),
	"ErrCodeMaximumNumberOfGuildWidgetSettingsUpdatesHasBeenReached":          reflect.ValueOf(discordgo.ErrCodeMaximumNumberOfGuildWidgetSettingsUpdatesHasBeenReached),
	"ErrCodeMaximumNumberOfInvitesReached":                                    reflect.ValueOf(discordgo.ErrCodeMaximumNumberOfInvitesReached),
	"ErrCodeMaximumNumberOfPruneRequestsHasBeenReached":                       reflect.ValueOf(discordgo.ErrCodeMaximumNumberOfPruneRequestsHasBeenReached),
	"ErrCodeMaximumNumberOfRecipientsReached":                                 reflect.ValueOf(discordgo.ErrCodeMaximumNumberOfRecipientsReached),
	"ErrCodeMaximumNumberOfServerMembersReached":                              reflect.ValueOf(discordgo.ErrCodeMaximumNumberOfServerMembersReached),
	"ErrCodeMaximumNumberOfStickersReached":                                   reflect.ValueOf(discordgo.ErrCodeMaximumNumberOfStickersReached),
	"ErrCodeMaximumNumberOfThreadParticipantsReached":                         reflect.ValueOf(discordgo.ErrCodeMaximumNumberOfThreadParticipantsReached),
	"ErrCodeMaximumNumberOfUncompletedGuildScheduledEventsReached":            reflect.ValueOf(discordgo.ErrCodeMaximumNumberOfUncompletedGuildScheduledEventsReached),
	"ErrCodeMaximumNumberOfWebhooksReached":                                   reflect.ValueOf(discordgo.ErrCodeMaximumNumberOfWebhooksReached),
	"ErrCodeMaximumPinsReached":                                               reflect.ValueOf(discordgo.ErrCodeMaximumPinsReached),
	"ErrCodeMessageAlreadyCrossposted":                                        reflect.ValueOf(discordgo.ErrCodeMessageAlreadyCrossposted),
	"ErrCodeMessageCannotBeEditedDueToAnnouncementRateLimits":                 reflect.ValueOf(discordgo.ErrCodeMessageCannotBeEditedDueToAnnouncementRateLimits),
	"ErrCodeMessageProvidedTooOldForBulkDelete":                               reflect.ValueOf(discordgo.ErrCodeMessageProvidedTooOldForBulkDelete),
	"ErrCodeMissingAccess":                                                    reflect.ValueOf(discordgo.ErrCodeMissingAccess),
	"ErrCodeMissingPermissions":                                               reflect.ValueOf(discordgo.ErrCodeMissingPermissions),
	"ErrCodeMissingRequiredOAuth2Scope":                                       reflect.ValueOf(discordgo.ErrCodeMissingRequiredOAuth2Scope),
	"ErrCodeNoUsersWithDiscordTagExist":                                       reflect.ValueOf(discordgo.ErrCodeNoUsersWithDiscordTagExist),
	"ErrCodeOAuth2ApplicationDoesNotHaveBot":                                  reflect.ValueOf(discordgo.ErrCodeOAuth2ApplicationDoesNotHaveBot),
	"ErrCodeOAuth2ApplicationLimitReached":                                    reflect.ValueOf(discordgo.ErrCodeOAuth2ApplicationLimitReached),
	"ErrCodeOnlyBotsCanUseEndpoint":                                           reflect.ValueOf(discordgo.ErrCodeOnlyBotsCanUseEndpoint),
	"ErrCodeOnlyTheOwnerOfThisAccountCanPerformThisAction":                    reflect.ValueOf(discordgo.ErrCodeOnlyTheOwnerOfThisAccountCanPerformThisAction),
	"ErrCodeOpeningDirectMessagesTooFast":                                     reflect.ValueOf(discordgo.ErrCodeOpeningDirectMessagesTooFast),
	"ErrCodePerformedOperationOnArchivedThread":                               reflect.ValueOf(discordgo.ErrCodePerformedOperationOnArchivedThread),
	"ErrCodeReactionBlocked":                                                  reflect.ValueOf(discordgo.ErrCodeReactionBlocked),
	"ErrCodeRequestEntityTooLarge":                                            reflect.ValueOf(discordgo.ErrCodeRequestEntityTooLarge),
	"ErrCodeSendMessagesHasBeenTemporarilyDisabled":                           reflect.ValueOf(discordgo.ErrCodeSendMessagesHasBeenTemporarilyDisabled),
	"ErrCodeStageTopicContainsNotAllowedWordsForPublicStages":                 reflect.ValueOf(discordgo.ErrCodeStageTopicContainsNotAllowedWordsForPublicStages),
	"ErrCodeStickerAnimationDurationExceedsMaximumOfFiveSeconds":              reflect.ValueOf(discordgo.ErrCodeStickerAnimationDurationExceedsMaximumOfFiveSeconds),
	"ErrCodeStickerFrameCountExceedsMaximumOfOneThousandFrames":               reflect.ValueOf(discordgo.ErrCodeStickerFrameCountExceedsMaximumOfOneThousandFrames),
	"ErrCodeStickerFrameRateOutOfRange":                                       reflect.ValueOf(discordgo.ErrCodeStickerFrameRateOutOfRange),
	"ErrCodeStickerMaximumFramerateExceeded":                                  reflect.ValueOf(discordgo.ErrCodeStickerMaximumFramerateExceeded),
	"ErrCodeTargetIsNotConnectedToVoice":                                      reflect.ValueOf(discordgo.ErrCodeTargetIsNotConnectedToVoice),
	"ErrCodeTheRequestBodyContainsInvalidJSON":                                reflect.ValueOf(discordgo.ErrCodeTheRequestBodyContainsInvalidJSON),
	"ErrCodeTheStageIsAlreadyOpen":                                            reflect.ValueOf(discordgo.ErrCodeTheStageIsAlreadyOpen),
	"ErrCodeTheWriteActionYouArePerformingOnTheServerHasHitTheWriteRateLimit": reflect.ValueOf(discordgo.ErrCodeTheWriteActionYouArePerformingOnTheServerHasHitTheWriteRateLimit),
	"ErrCodeThisActionCannotBePerformedDueToSlowmodeRateLimit":                reflect.ValueOf(discordgo.ErrCodeThisActionCannotBePerformedDueToSlowmodeRateLimit),
	"ErrCodeThisServerIsNotAvailableInYourLocation":                           reflect.ValueOf(discordgo.ErrCodeThisServerIsNotAvailableInYourLocation),
	"ErrCodeThisServerNeedsMonetizationEnabledInOrderToPerformThisAction":     reflect.ValueOf(discordgo.ErrCodeThisServerNeedsMonetizationEnabledInOrderToPerformThisAction),
	"ErrCodeThisServerNeedsMoreBoostsToPerformThisAction":                     reflect.ValueOf(discordgo.ErrCodeThisServerNeedsMoreBoostsToPerformThisAction),
	"ErrCodeThreadAlreadyCreatedForThisMessage":                               reflect.ValueOf(discordgo.ErrCodeThreadAlreadyCreatedForThisMessage),
	"ErrCodeThreadIsLocked":                                                   reflect.ValueOf(discordgo.ErrCodeThreadIsLocked),
	"ErrCodeTooFewOrTooManyMessagesToDelete":                                  reflect.ValueOf(discordgo.ErrCodeTooFewOrTooManyMessagesToDelete),
	"ErrCodeTooManyReactions":                                                 reflect.ValueOf(discordgo.ErrCodeTooManyReactions),
	"ErrCodeUnauthorized":                                                     reflect.ValueOf(discordgo.ErrCodeUnauthorized),
	"ErrCodeUnknownAccount":                                                   reflect.ValueOf(discordgo.ErrCodeUnknownAccount),
	"ErrCodeUnknownApplication":                                               reflect.ValueOf(discordgo.ErrCodeUnknownApplication),
	"ErrCodeUnknownApplicationCommand":                                        reflect.ValueOf(discordgo.ErrCodeUnknownApplicationCommand),
	"ErrCodeUnknownApplicationCommandPermissions":                             reflect.ValueOf(discordgo.ErrCodeUnknownApplicationCommandPermissions),
	"ErrCodeUnknownBan":                                                       reflect.ValueOf(discordgo.ErrCodeUnknownBan),
	"ErrCodeUnknownBranch":                                                    reflect.ValueOf(discordgo.ErrCodeUnknownBranch),
	"ErrCodeUnknownBuild":                                                     reflect.ValueOf(discordgo.ErrCodeUnknownBuild),
	"ErrCodeUnknownChannel":                                                   reflect.ValueOf(discordgo.ErrCodeUnknownChannel),
	"ErrCodeUnknownDiscoveryCategory":                                         reflect.ValueOf(discordgo.ErrCodeUnknownDiscoveryCategory),
	"ErrCodeUnknownEmoji":                                                     reflect.ValueOf(discordgo.ErrCodeUnknownEmoji),
	"ErrCodeUnknownEntitlement":                                               reflect.ValueOf(discordgo.ErrCodeUnknownEntitlement),
	"ErrCodeUnknownGiftCode":                                                  reflect.ValueOf(discordgo.ErrCodeUnknownGiftCode),
	"ErrCodeUnknownGuild":                                                     reflect.ValueOf(discordgo.ErrCodeUnknownGuild),
	"ErrCodeUnknownGuildMemberVerificationForm":                               reflect.ValueOf(discordgo.ErrCodeUnknownGuildMemberVerificationForm),
	"ErrCodeUnknownGuildScheduledEvent":                                       reflect.ValueOf(discordgo.ErrCodeUnknownGuildScheduledEvent),
	"ErrCodeUnknownGuildScheduledEventUser":                                   reflect.ValueOf(discordgo.ErrCodeUnknownGuildScheduledEventUser),
	"ErrCodeUnknownGuildTemplate":                                             reflect.ValueOf(discordgo.ErrCodeUnknownGuildTemplate),
	"ErrCodeUnknownGuildWelcomeScreen":                                        reflect.ValueOf(discordgo.ErrCodeUnknownGuildWelcomeScreen),
	"ErrCodeUnknownIntegration":                                               reflect.ValueOf(discordgo.ErrCodeUnknownIntegration),
	"ErrCodeUnknownInteraction":                                               reflect.ValueOf(discordgo.ErrCodeUnknownInteraction),
	"ErrCodeUnknownInvite":                                                    reflect.ValueOf(discordgo.ErrCodeUnknownInvite),
	"ErrCodeUnknownLobby":                                                     reflect.ValueOf(discordgo.ErrCodeUnknownLobby),
	"ErrCodeUnknownMember":                                                    reflect.ValueOf(discordgo.ErrCodeUnknownMember),
	"ErrCodeUnknownMessage":                                                   reflect.ValueOf(discordgo.ErrCodeUnknownMessage),
	"ErrCodeUnknownOverwrite":                                                 reflect.ValueOf(discordgo.ErrCodeUnknownOverwrite),
	"ErrCodeUnknownPremiumServerSubscribeCooldown":                            reflect.ValueOf(discordgo.ErrCodeUnknownPremiumServerSubscribeCooldown),
	"ErrCodeUnknownProvider":                                                  reflect.ValueOf(discordgo.ErrCodeUnknownProvider),
	"ErrCodeUnknownRedistributable":                                           reflect.ValueOf(discordgo.ErrCodeUnknownRedistributable),
	"ErrCodeUnknownRole":                                                      reflect.ValueOf(discordgo.ErrCodeUnknownRole),
	"ErrCodeUnknownSKU":                                                       reflect.ValueOf(discordgo.ErrCodeUnknownSKU),
	"ErrCodeUnknownSession":                                                   reflect.ValueOf(discordgo.ErrCodeUnknownSession),
	"ErrCodeUnknownStageInstance":                                             reflect.ValueOf(discordgo.ErrCodeUnknownStageInstance),
	"ErrCodeUnknownSticker":                                                   reflect.ValueOf(discordgo.ErrCodeUnknownSticker),
	"ErrCodeUnknownStoreDirectoryLayout":                                      reflect.ValueOf(discordgo.ErrCodeUnknownStoreDirectoryLayout),
	"ErrCodeUnknownStoreListing":                                              reflect.ValueOf(discordgo.ErrCodeUnknownStoreListing),
	"ErrCodeUnknownStream":                                                    reflect.ValueOf(discordgo.ErrCodeUnknownStream),
	"ErrCodeUnknownToken":                                                     reflect.ValueOf(discordgo.ErrCodeUnknownToken),
	"ErrCodeUnknownUser":                                                      reflect.ValueOf(discordgo.ErrCodeUnknownUser),
	"ErrCodeUnknownWebhook":                                                   reflect.ValueOf(discordgo.ErrCodeUnknownWebhook),
	"ErrCodeUnknownWebhookService":                                            reflect.ValueOf(discordgo.ErrCodeUnknownWebhookService),
	"ErrCodeUploadedLottiesCannotContainRasterizedImages":                     reflect.ValueOf(discordgo.ErrCodeUploadedLottiesCannotContainRasterizedImages),
	"ErrCodeUserIsBannedFromThisGuild":                                        reflect.ValueOf(discordgo.ErrCodeUserIsBannedFromThisGuild),
	"ErrCodeYouAreNotAuthorizedToPerformThisActionOnThisApplication":          reflect.ValueOf(discordgo.ErrCodeYouAreNotAuthorizedToPerformThisActionOnThisApplication),
	"ExpireBehaviorKick":                                                      reflect.ValueOf(discordgo.ExpireBehaviorKick),
	"ExpireBehaviorRemoveRole":                                                reflect.ValueOf(discordgo.ExpireBehaviorRemoveRole),
	"ExplicitContentFilterAllMembers":                                         reflect.ValueOf(discordgo.ExplicitContentFilterAllMembers),
	"ExplicitContentFilterDisabled":                                           reflect.ValueOf(discordgo.ExplicitContentFilterDisabled),
	"ExplicitContentFilterMembersWithoutRoles":                                reflect.ValueOf(discordgo.ExplicitContentFilterMembersWithoutRoles),
	"FailedHeartbeatAcks":                                                     reflect.ValueOf(discordgo.FailedHeartbeatAcks),
	"Finnish":                                                                 reflect.ValueOf(discordgo.Finnish),
	"French":                                                                  reflect.ValueOf(discordgo.French),
	"German":                                                                  reflect.ValueOf(discordgo.German),
	"Greek":                                                                   reflect.ValueOf(discordgo.Greek),
	"GuildFeatureAnimatedBanner":                                              reflect.ValueOf(discordgo.GuildFeatureAnimatedBanner),
	"GuildFeatureAnimatedIcon":                                                reflect.ValueOf(discordgo.GuildFeatureAnimatedIcon),
	"GuildFeatureAutoModeration":                                              reflect.ValueOf(discordgo.GuildFeatureAutoModeration),
	"GuildFeatureBanner":                                                      reflect.ValueOf(discordgo.GuildFeatureBanner),
	"GuildFeatureCommunity":                                                   reflect.ValueOf(discordgo.GuildFeatureCommunity),
	"GuildFeatureDiscoverable":                                                reflect.ValueOf(discordgo.GuildFeatureDiscoverable),
	"GuildFeatureFeaturable":                                                  reflect.ValueOf(discordgo.GuildFeatureFeaturable),
	"GuildFeatureInviteSplash":                                                reflect.ValueOf(discordgo.GuildFeatureInviteSplash),
	"GuildFeatureMemberVerificationGateEnabled":                               reflect.ValueOf(discordgo.GuildFeatureMemberVerificationGateEnabled),
	"GuildFeatureMonetizationEnabled":                                         reflect.ValueOf(discordgo.GuildFeatureMonetizationEnabled),
	"GuildFeatureMoreStickers":                                                reflect.ValueOf(discordgo.GuildFeatureMoreStickers),
	"GuildFeatureNews":                                                        reflect.ValueOf(discordgo.GuildFeatureNews),
	"GuildFeaturePartnered":                                                   reflect.ValueOf(discordgo.GuildFeaturePartnered),
	"GuildFeaturePreviewEnabled":                                              reflect.ValueOf(discordgo.GuildFeaturePreviewEnabled),
	"GuildFeaturePrivateThreads":                                              reflect.ValueOf(discordgo.GuildFeaturePrivateThreads),
	"GuildFeatureRoleIcons":                                                   reflect.ValueOf(discordgo.GuildFeatureRoleIcons),
	"GuildFeatureTicketedEventsEnabled":                                       reflect.ValueOf(discordgo.GuildFeatureTicketedEventsEnabled),
	"GuildFeatureVanityURL":                                                   reflect.ValueOf(discordgo.GuildFeatureVanityURL),
	"GuildFeatureVerified":                                                    reflect.ValueOf(discordgo.GuildFeatureVerified),
	"GuildFeatureVipRegions":                                                  reflect.ValueOf(discordgo.GuildFeatureVipRegions),
	"GuildFeatureWelcomeScreenEnabled":                                        reflect.ValueOf(discordgo.GuildFeatureWelcomeScreenEnabled),
	"GuildNSFWLevelAgeRestricted":                                             reflect.ValueOf(discordgo.GuildNSFWLevelAgeRestricted),
	"GuildNSFWLevelDefault":                                                   reflect.ValueOf(discordgo.GuildNSFWLevelDefault),
	"GuildNSFWLevelExplicit":                                                  reflect.ValueOf(discordgo.GuildNSFWLevelExplicit),
	"GuildNSFWLevelSafe":                                                      reflect.ValueOf(discordgo.GuildNSFWLevelSafe),
	"GuildScheduledEventEntityTypeExternal":                                   reflect.ValueOf(discordgo.GuildScheduledEventEntityTypeExternal),
	"GuildScheduledEventEntityTypeStageInstance":                              reflect.ValueOf(discordgo.GuildScheduledEventEntityTypeStageInstance),
	"GuildScheduledEventEntityTypeVoice":                                      reflect.ValueOf(discordgo.GuildScheduledEventEntityTypeVoice),
	"GuildScheduledEventPrivacyLevelGuildOnly":                                reflect.ValueOf(discordgo.GuildScheduledEventPrivacyLevelGuildOnly),
	"GuildScheduledEventStatusActive":                                         reflect.ValueOf(discordgo.GuildScheduledEventStatusActive),
	"GuildScheduledEventStatusCanceled":                                       reflect.ValueOf(discordgo.GuildScheduledEventStatusCanceled),
	"GuildScheduledEventStatusCompleted":                                      reflect.ValueOf(discordgo.GuildScheduledEventStatusCompleted),
	"GuildScheduledEventStatusScheduled":                                      reflect.ValueOf(discordgo.GuildScheduledEventStatusScheduled),
	"Hindi":                                                                   reflect.ValueOf(discordgo.Hindi),
	"Hungarian":                                                               reflect.ValueOf(discordgo.Hungarian),
	"IntentAutoModerationConfiguration":                                       reflect.ValueOf(discordgo.IntentAutoModerationConfiguration),
	"IntentAutoModerationExecution":                                           reflect.ValueOf(discordgo.IntentAutoModerationExecution),
	"IntentDirectMessageReactions":                                            reflect.ValueOf(discordgo.IntentDirectMessageReactions),
	"IntentDirectMessageTyping":                                               reflect.ValueOf(discordgo.IntentDirectMessageTyping),
	"IntentDirectMessages":                                                    reflect.ValueOf(discordgo.IntentDirectMessages),
	"IntentGuildBans":                                                         reflect.ValueOf(discordgo.IntentGuildBans),
	"IntentGuildEmojis":                                                       reflect.ValueOf(discordgo.IntentGuildEmojis),
	"IntentGuildIntegrations":                                                 reflect.ValueOf(discordgo.IntentGuildIntegrations),
	"IntentGuildInvites":                                                      reflect.ValueOf(discordgo.IntentGuildInvites),
	"IntentGuildMembers":                                                      reflect.ValueOf(discordgo.IntentGuildMembers),
	"IntentGuildMessageReactions":                                             reflect.ValueOf(discordgo.IntentGuildMessageReactions),
	"IntentGuildMessageTyping":                                                reflect.ValueOf(discordgo.IntentGuildMessageTyping),
	"IntentGuildMessages":                                                     reflect.ValueOf(discordgo.IntentGuildMessages),
	"IntentGuildPresences":                                                    reflect.ValueOf(discordgo.IntentGuildPresences),
	"IntentGuildScheduledEvents":                                              reflect.ValueOf(discordgo.IntentGuildScheduledEvents),
	"IntentGuildVoiceStates":                                                  reflect.ValueOf(discordgo.IntentGuildVoiceStates),
	"IntentGuildWebhooks":                                                     reflect.ValueOf(discordgo.IntentGuildWebhooks),
	"IntentGuilds":                                                            reflect.ValueOf(discordgo.IntentGuilds),
	"IntentMessageContent":                                                    reflect.ValueOf(discordgo.IntentMessageContent),
	"IntentsAll":                                                              reflect.ValueOf(discordgo.IntentsAll),
	"IntentsAllWithoutPrivileged":                                             reflect.ValueOf(discordgo.IntentsAllWithoutPrivileged),
	"IntentsDirectMessageReactions":                                           reflect.ValueOf(discordgo.IntentsDirectMessageReactions),
	"IntentsDirectMessageTyping":                                              reflect.ValueOf(discordgo.IntentsDirectMessageTyping),
	"IntentsDirectMessages":                                                   reflect.ValueOf(discordgo.IntentsDirectMessages),
	"IntentsGuildBans":                                                        reflect.ValueOf(discordgo.IntentsGuildBans),
	"IntentsGuildEmojis":                                                      reflect.ValueOf(discordgo.IntentsGuildEmojis),
	"IntentsGuildIntegrations":                                                reflect.ValueOf(discordgo.IntentsGuildIntegrations),
	"IntentsGuildInvites":                                                     reflect.ValueOf(discordgo.IntentsGuildInvites),
	"IntentsGuildMembers":                                                     reflect.ValueOf(discordgo.IntentsGuildMembers),
	"IntentsGuildMessageReactions":                                            reflect.ValueOf(discordgo.IntentsGuildMessageReactions),
	"IntentsGuildMessageTyping":                                               reflect.ValueOf(discordgo.IntentsGuildMessageTyping),
	"IntentsGuildMessages":                                                    reflect.ValueOf(discordgo.IntentsGuildMessages),
	"IntentsGuildPresences":                                                   reflect.ValueOf(discordgo.IntentsGuildPresences),
	"IntentsGuildScheduledEvents":                                             reflect.ValueOf(discordgo.IntentsGuildScheduledEvents),
	"IntentsGuildVoiceStates":                                                 reflect.ValueOf(discordgo.IntentsGuildVoiceStates),
	"IntentsGuildWebhooks":                                                    reflect.ValueOf(discordgo.IntentsGuildWebhooks),
	"IntentsGuilds":                                                           reflect.ValueOf(discordgo.IntentsGuilds),
	"IntentsMessageContent":                                                   reflect.ValueOf(discordgo.IntentsMessageContent),
	"IntentsNone":                                                             reflect.ValueOf(discordgo.IntentsNone),
	"InteractionApplicationCommand":                                           reflect.ValueOf(discordgo.InteractionApplicationCommand),
	"InteractionApplicationCommandAutocomplete":                               reflect.ValueOf(discordgo.InteractionApplicationCommandAutocomplete),
	"InteractionApplicationCommandAutocompleteResult":                         reflect.ValueOf(discordgo.InteractionApplicationCommandAutocompleteResult),
	"InteractionDeadline":                                                     reflect.ValueOf(discordgo.InteractionDeadline),
	"InteractionMessageComponent":                                             reflect.ValueOf(discordgo.InteractionMessageComponent),
	"InteractionModalSubmit":                                                  reflect.ValueOf(discordgo.InteractionModalSubmit),
	"InteractionPing":                                                         reflect.ValueOf(discordgo.InteractionPing),
	"InteractionResponseChannelMessageWithSource":                             reflect.ValueOf(discordgo.InteractionResponseChannelMessageWithSource),
	"InteractionResponseDeferredChannelMessageWithSource":                     reflect.ValueOf(discordgo.InteractionResponseDeferredChannelMessageWithSource),
	"InteractionResponseDeferredMessageUpdate":                                reflect.ValueOf(discordgo.InteractionResponseDeferredMessageUpdate),
	"InteractionResponseModal":                                                reflect.ValueOf(discordgo.InteractionResponseModal),
	"InteractionResponsePong":                                                 reflect.ValueOf(discordgo.InteractionResponsePong),
	"InteractionResponseUpdateMessage":                                        reflect.ValueOf(discordgo.InteractionResponseUpdateMessage),
	"InviteTargetEmbeddedApplication":                                         reflect.ValueOf(discordgo.InviteTargetEmbeddedApplication),
	"InviteTargetStream":                                                      reflect.ValueOf(discordgo.InviteTargetStream),
	"Italian":                                                                 reflect.ValueOf(discordgo.Italian),
	"Japanese":                                                                reflect.ValueOf(discordgo.Japanese),
	"Korean":                                                                  reflect.ValueOf(discordgo.Korean),
	"LinkButton":                                                              reflect.ValueOf(discordgo.LinkButton),
	"Lithuanian":                                                              reflect.ValueOf(discordgo.Lithuanian),
	"LogDebug":                                                                reflect.ValueOf(discordgo.LogDebug),
	"LogError":                                                                reflect.ValueOf(discordgo.LogError),
	"LogInformational":                                                        reflect.ValueOf(discordgo.LogInformational),
	"LogWarning":                                                              reflect.ValueOf(discordgo.LogWarning),
	"MembershipStateAccepted":                                                 reflect.ValueOf(discordgo.MembershipStateAccepted),
	"MembershipStateInvited":                                                  reflect.ValueOf(discordgo.MembershipStateInvited),
	"MessageActivityTypeJoin":                                                 reflect.ValueOf(discordgo.MessageActivityTypeJoin),
	"MessageActivityTypeJoinRequest":                                          reflect.ValueOf(discordgo.MessageActivityTypeJoinRequest),
	"MessageActivityTypeListen":                                               reflect.ValueOf(discordgo.MessageActivityTypeListen),
	"MessageActivityTypeSpectate":                                             reflect.ValueOf(discordgo.MessageActivityTypeSpectate),
	"MessageApplicationCommand":                                               reflect.ValueOf(discordgo.MessageApplicationCommand),
	"MessageFlagsCrossPosted":                                                 reflect.ValueOf(discordgo.MessageFlagsCrossPosted),
	"MessageFlagsEphemeral":                                                   reflect.ValueOf(discordgo.MessageFlagsEphemeral),
	"MessageFlagsFailedToMentionSomeRolesInThread":                            reflect.ValueOf(discordgo.MessageFlagsFailedToMentionSomeRolesInThread),
	"MessageFlagsHasThread":                                                   reflect.ValueOf(discordgo.MessageFlagsHasThread),
	"MessageFlagsIsCrossPosted":                                               reflect.ValueOf(discordgo.MessageFlagsIsCrossPosted),
	"MessageFlagsLoading":                                                     reflect.ValueOf(discordgo.MessageFlagsLoading),
	"MessageFlagsSourceMessageDeleted":                                        reflect.ValueOf(discordgo.MessageFlagsSourceMessageDeleted),
	"MessageFlagsSuppressEmbeds":                                              reflect.ValueOf(discordgo.MessageFlagsSuppressEmbeds),
	"MessageFlagsSupressEmbeds":                                               reflect.ValueOf(discordgo.MessageFlagsSupressEmbeds),
	"MessageFlagsUrgent":                                                      reflect.ValueOf(discordgo.MessageFlagsUrgent),
	"MessageNotificationsAllMessages":                                         reflect.ValueOf(discordgo.MessageNotificationsAllMessages),
	"MessageNotificationsOnlyMentions":                                        reflect.ValueOf(discordgo.MessageNotificationsOnlyMentions),
	"MessageTypeCall":                                                         reflect.ValueOf(discordgo.MessageTypeCall),
	"MessageTypeChannelFollowAdd":                                             reflect.ValueOf(discordgo.MessageTypeChannelFollowAdd),
	"MessageTypeChannelIconChange":                                            reflect.ValueOf(discordgo.MessageTypeChannelIconChange),
	"MessageTypeChannelNameChange":                                            reflect.ValueOf(discordgo.MessageTypeChannelNameChange),
	"MessageTypeChannelPinnedMessage":                                         reflect.ValueOf(discordgo.MessageTypeChannelPinnedMessage),
	"MessageTypeChatInputCommand":                                             reflect.ValueOf(discordgo.MessageTypeChatInputCommand),
	"MessageTypeContextMenuCommand":                                           reflect.ValueOf(discordgo.MessageTypeContextMenuCommand),
	"MessageTypeDefault":                                                      reflect.ValueOf(discordgo.MessageTypeDefault),
	"MessageTypeGuildDiscoveryDisqualified":                                   reflect.ValueOf(discordgo.MessageTypeGuildDiscoveryDisqualified),
	"MessageTypeGuildDiscoveryRequalified":                                    reflect.ValueOf(discordgo.MessageTypeGuildDiscoveryRequalified),
	"MessageTypeGuildMemberJoin":                                              reflect.ValueOf(discordgo.MessageTypeGuildMemberJoin),
	"MessageTypeRecipientAdd":                                                 reflect.ValueOf(discordgo.MessageTypeRecipientAdd),
	"MessageTypeRecipientRemove":                                              reflect.ValueOf(discordgo.MessageTypeRecipientRemove),
	"MessageTypeReply":                                                        reflect.ValueOf(discordgo.MessageTypeReply),
	"MessageTypeThreadCreated":                                                reflect.ValueOf(discordgo.MessageTypeThreadCreated),
	"MessageTypeThreadStarterMessage":                                         reflect.ValueOf(discordgo.MessageTypeThreadStarterMessage),
	"MessageTypeUserPremiumGuildSubscription":                                 reflect.ValueOf(discordgo.MessageTypeUserPremiumGuildSubscription),
	"MessageTypeUserPremiumGuildSubscriptionTierOne":                          reflect.ValueOf(discordgo.MessageTypeUserPremiumGuildSubscriptionTierOne),
	"MessageTypeUserPremiumGuildSubscriptionTierThree":                        reflect.ValueOf(discordgo.MessageTypeUserPremiumGuildSubscriptionTierThree),
	"MessageTypeUserPremiumGuildSubscriptionTierTwo":                          reflect.ValueOf(discordgo.MessageTypeUserPremiumGuildSubscriptionTierTwo),
	"MfaLevelElevated":                                                        reflect.ValueOf(discordgo.MfaLevelElevated),
	"MfaLevelNone":                                                            reflect.ValueOf(discordgo.MfaLevelNone),
	"Norwegian":                                                               reflect.ValueOf(discordgo.Norwegian),
	"PermissionAddReactions":                                                  reflect.ValueOf(discordgo.PermissionAddReactions),
	"PermissionAdministrator":                                                 reflect.ValueOf(discordgo.PermissionAdministrator),
	"PermissionAll":                                                           reflect.ValueOf(discordgo.PermissionAll),
	"PermissionAllChannel":                                                    reflect.ValueOf(discordgo.PermissionAllChannel),
	"PermissionAllText":                                                       reflect.ValueOf(discordgo.PermissionAllText),
	"PermissionAllVoice":                                                      reflect.ValueOf(discordgo.PermissionAllVoice),
	"PermissionAttachFiles":                                                   reflect.ValueOf(discordgo.PermissionAttachFiles),
	"PermissionBanMembers":                                                    reflect.ValueOf(discordgo.PermissionBanMembers),
	"PermissionChangeNickname":                                                reflect.ValueOf(discordgo.PermissionChangeNickname),
	"PermissionCreateInstantInvite":                                           reflect.ValueOf(discordgo.PermissionCreateInstantInvite),
	"PermissionCreatePrivateThreads":                                          reflect.ValueOf(discordgo.PermissionCreatePrivateThreads),
	"PermissionCreatePublicThreads":                                           reflect.ValueOf(discordgo.PermissionCreatePublicThreads),
	"PermissionEmbedLinks":                                                    reflect.ValueOf(discordgo.PermissionEmbedLinks),
	"PermissionKickMembers":                                                   reflect.ValueOf(discordgo.PermissionKickMembers),
	"PermissionManageChannels":                                                reflect.ValueOf(discordgo.PermissionManageChannels),
	"PermissionManageEmojis":                                                  reflect.ValueOf(discordgo.PermissionManageEmojis),
	"PermissionManageEvents":                                                  reflect.ValueOf(discordgo.PermissionManageEvents),
	"PermissionManageMessages":                                                reflect.ValueOf(discordgo.PermissionManageMessages),
	"PermissionManageNicknames":                                               reflect.ValueOf(discordgo.PermissionManageNicknames),
	"PermissionManageRoles":                                                   reflect.ValueOf(discordgo.PermissionManageRoles),
	"PermissionManageServer":                                                  reflect.ValueOf(discordgo.PermissionManageServer),
	"PermissionManageThreads":                                                 reflect.ValueOf(discordgo.PermissionManageThreads),
	"PermissionManageWebhooks":                                                reflect.ValueOf(discordgo.PermissionManageWebhooks),
	"PermissionMentionEveryone":                                               reflect.ValueOf(discordgo.PermissionMentionEveryone),
	"PermissionModerateMembers":                                               reflect.ValueOf(discordgo.PermissionModerateMembers),
	"PermissionOverwriteTypeMember":                                           reflect.ValueOf(discordgo.PermissionOverwriteTypeMember),
	"PermissionOverwriteTypeRole":                                             reflect.ValueOf(discordgo.PermissionOverwriteTypeRole),
	"PermissionReadMessageHistory":                                            reflect.ValueOf(discordgo.PermissionReadMessageHistory),
	"PermissionReadMessages":                                                  reflect.ValueOf(discordgo.PermissionReadMessages),
	"PermissionSendMessages":                                                  reflect.ValueOf(discordgo.PermissionSendMessages),
	"PermissionSendMessagesInThreads":                                         reflect.ValueOf(discordgo.PermissionSendMessagesInThreads),
	"PermissionSendTTSMessages":                                               reflect.ValueOf(discordgo.PermissionSendTTSMessages),
	"PermissionUseActivities":                                                 reflect.ValueOf(discordgo.PermissionUseActivities),
	"PermissionUseExternalEmojis":                                             reflect.ValueOf(discordgo.PermissionUseExternalEmojis),
	"PermissionUseExternalStickers":                                           reflect.ValueOf(discordgo.PermissionUseExternalStickers),
	"PermissionUseSlashCommands":                                              reflect.ValueOf(discordgo.PermissionUseSlashCommands),
	"PermissionViewAuditLogs":                                                 reflect.ValueOf(discordgo.PermissionViewAuditLogs),
	"PermissionViewChannel":                                                   reflect.ValueOf(discordgo.PermissionViewChannel),
	"PermissionViewGuildInsights":                                             reflect.ValueOf(discordgo.PermissionViewGuildInsights),
	"PermissionVoiceConnect":                                                  reflect.ValueOf(discordgo.PermissionVoiceConnect),
	"PermissionVoiceDeafenMembers":                                            reflect.ValueOf(discordgo.PermissionVoiceDeafenMembers),
	"PermissionVoiceMoveMembers":                                              reflect.ValueOf(discordgo.PermissionVoiceMoveMembers),
	"PermissionVoiceMuteMembers":                                              reflect.ValueOf(discordgo.PermissionVoiceMuteMembers),
	"PermissionVoicePrioritySpeaker":                                          reflect.ValueOf(discordgo.PermissionVoicePrioritySpeaker),
	"PermissionVoiceRequestToSpeak":                                           reflect.ValueOf(discordgo.PermissionVoiceRequestToSpeak),
	"PermissionVoiceSpeak":                                                    reflect.ValueOf(discordgo.PermissionVoiceSpeak),
	"PermissionVoiceStreamVideo":                                              reflect.ValueOf(discordgo.PermissionVoiceStreamVideo),
	"PermissionVoiceUseVAD":                                                   reflect.ValueOf(discordgo.PermissionVoiceUseVAD),
	"Polish":                                                                  reflect.ValueOf(discordgo.Polish),
	"PortugueseBR":                                                            reflect.ValueOf(discordgo.PortugueseBR),
	"PremiumTier1":                                                            reflect.ValueOf(discordgo.PremiumTier1),
	"PremiumTier2":                                                            reflect.ValueOf(discordgo.PremiumTier2),
	"PremiumTier3":                                                            reflect.ValueOf(discordgo.PremiumTier3),
	"PremiumTierNone":                                                         reflect.ValueOf(discordgo.PremiumTierNone),
	"PrimaryButton":                                                           reflect.ValueOf(discordgo.PrimaryButton),
	"Romanian":                                                                reflect.ValueOf(discordgo.Romanian),
	"Russian":                                                                 reflect.ValueOf(discordgo.Russian),
	"SecondaryButton":                                                         reflect.ValueOf(discordgo.SecondaryButton),
	"SelectMenuComponent":                                                     reflect.ValueOf(discordgo.SelectMenuComponent),
	"SpanishES":                                                               reflect.ValueOf(discordgo.SpanishES),
	"StageInstancePrivacyLevelGuildOnly":                                      reflect.ValueOf(discordgo.StageInstancePrivacyLevelGuildOnly),
	"StageInstancePrivacyLevelPublic":                                         reflect.ValueOf(discordgo.StageInstancePrivacyLevelPublic),
	"StatusDoNotDisturb":                                                      reflect.ValueOf(discordgo.StatusDoNotDisturb),
	"StatusIdle":                                                              reflect.ValueOf(discordgo.StatusIdle),
	"StatusInvisible":                                                         reflect.ValueOf(discordgo.StatusInvisible),
	"StatusOffline":                                                           reflect.ValueOf(discordgo.StatusOffline),
	"StatusOnline":                                                            reflect.ValueOf(discordgo.StatusOnline),
	"StickerFormatTypeAPNG":                                                   reflect.ValueOf(discordgo.StickerFormatTypeAPNG),
	"StickerFormatTypeLottie":                                                 reflect.ValueOf(discordgo.StickerFormatTypeLottie),
	"StickerFormatTypePNG":                                                    reflect.ValueOf(discordgo.StickerFormatTypePNG),
	"StickerTypeGuild":                                                        reflect.ValueOf(discordgo.StickerTypeGuild),
	"StickerTypeStandard":                                                     reflect.ValueOf(discordgo.StickerTypeStandard),
	"SuccessButton":                                                           reflect.ValueOf(discordgo.SuccessButton),
	"Swedish":                                                                 reflect.ValueOf(discordgo.Swedish),
	"SystemChannelFlagsSuppressJoin":                                          reflect.ValueOf(discordgo.SystemChannelFlagsSuppressJoin),
	"SystemChannelFlagsSuppressPremium":                                       reflect.ValueOf(discordgo.SystemChannelFlagsSuppressPremium),
	"TextInputComponent":                                                      reflect.ValueOf(discordgo.TextInputComponent),
	"TextInputParagraph":                                                      reflect.ValueOf(discordgo.TextInputParagraph),
	"TextInputShort":                                                          reflect.ValueOf(discordgo.TextInputShort),
	"Thai":                                                                    reflect.ValueOf(discordgo.Thai),
	"Turkish":                                                                 reflect.ValueOf(discordgo.Turkish),
	"Ukrainian":                                                               reflect.ValueOf(discordgo.Ukrainian),
	"Unknown":                                                                 reflect.ValueOf(discordgo.Unknown),
	"UserApplicationCommand":                                                  reflect.ValueOf(discordgo.UserApplicationCommand),
	"UserFlagBugHunterLevel1":                                                 reflect.ValueOf(discordgo.UserFlagBugHunterLevel1),
	"UserFlagBugHunterLevel2":                                                 reflect.ValueOf(discordgo.UserFlagBugHunterLevel2),
	"UserFlagDiscordCertifiedModerator":                                       reflect.ValueOf(discordgo.UserFlagDiscordCertifiedModerator),
	"UserFlagDiscordEmployee":                                                 reflect.ValueOf(discordgo.UserFlagDiscordEmployee),
	"UserFlagDiscordPartner":                                                  reflect.ValueOf(discordgo.UserFlagDiscordPartner),
	"UserFlagEarlySupporter":                                                  reflect.ValueOf(discordgo.UserFlagEarlySupporter),
	"UserFlagHouseBalance":                                                    reflect.ValueOf(discordgo.UserFlagHouseBalance),
	"UserFlagHouseBravery":                                                    reflect.ValueOf(discordgo.UserFlagHouseBravery),
	"UserFlagHouseBrilliance":                                                 reflect.ValueOf(discordgo.UserFlagHouseBrilliance),
	"UserFlagHypeSquadEvents":                                                 reflect.ValueOf(discordgo.UserFlagHypeSquadEvents),
	"UserFlagSystem":                                                          reflect.ValueOf(discordgo.UserFlagSystem),
	"UserFlagTeamUser":                                                        reflect.ValueOf(discordgo.UserFlagTeamUser),
	"UserFlagVerifiedBot":                                                     reflect.ValueOf(discordgo.UserFlagVerifiedBot),
	"UserFlagVerifiedBotDeveloper":                                            reflect.ValueOf(discordgo.UserFlagVerifiedBotDeveloper),
	"VERSION":                                                                 reflect.ValueOf(discordgo.VERSION),
	"VerificationLevelHigh":                                                   reflect.ValueOf(discordgo.VerificationLevelHigh),
	"VerificationLevelLow":                                                    reflect.ValueOf(discordgo.VerificationLevelLow),
	"VerificationLevelMedium":                                                 reflect.ValueOf(discordgo.VerificationLevelMedium),
	"VerificationLevelNone":                                                   reflect.ValueOf(discordgo.VerificationLevelNone),
	"VerificationLevelVeryHigh":                                               reflect.ValueOf(discordgo.VerificationLevelVeryHigh),
	"Vietnamese":                                                              reflect.ValueOf(discordgo.Vietnamese),
	"WebhookTypeChannelFollower":                                              reflect.ValueOf(discordgo.WebhookTypeChannelFollower),
	"WebhookTypeIncoming":                                                     reflect.ValueOf(discordgo.WebhookTypeIncoming),
}
